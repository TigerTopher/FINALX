Created by PLY version 3.6 (http://www.dabeaz.com/ply)

Unused terminals:

    KEYS
    COMMENT

Grammar

Rule 0     S' -> statementTop
Rule 1     statementTop -> END
Rule 2     statementTop -> statement
Rule 3     statement -> declaration statementTop
Rule 4     statement -> expression statementTop
Rule 5     statement -> IfThenElse statementTop
Rule 6     statement -> AssignmentHead statementTop
Rule 7     statement -> WhileLoop statementTop
Rule 8     statement -> ForLoop statementTop
Rule 9     statement -> typeCastToInt statementTop
Rule 10    statement -> typecastToFloat statementTop
Rule 11    statement -> FunctionDefinition statementTop
Rule 12    statement -> FunctionCall statementTop
Rule 13    statement -> returnDec statementTop
Rule 14    statement -> stringOpStatement statementTop
Rule 15    statement -> listOPStatement statementTop
Rule 16    statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
Rule 17    statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop
Rule 18    statement1 -> declaration
Rule 19    statement1 -> expression
Rule 20    statement1 -> IfThenElse
Rule 21    statement1 -> AssignmentHead
Rule 22    statement1 -> WhileLoop
Rule 23    statement1 -> ForLoop
Rule 24    statement1 -> typeCastToInt
Rule 25    statement1 -> typecastToFloat
Rule 26    statement1 -> FunctionDefinition
Rule 27    statement1 -> FunctionCall
Rule 28    statement1 -> returnDec
Rule 29    statement1 -> stringOpStatement
Rule 30    statement1 -> listOPStatement statementTop
Rule 31    statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON
Rule 32    statement1 -> PRINT LPAREN content RPAREN SEMICOLON
Rule 33    content -> toPrint morePrint
Rule 34    morePrint -> PLUS toPrint morePrint
Rule 35    morePrint -> EMPTY
Rule 36    toPrint -> STRINGVALUE
Rule 37    toPrint -> CONSTANT
Rule 38    toPrint -> IDENTIFIER
Rule 39    declaration -> identifierDeclaration
Rule 40    declaration -> listDec
Rule 41    identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON
Rule 42    identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
Rule 43    identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
Rule 44    identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
Rule 45    dataType -> INT
Rule 46    dataType -> BOOLEAN
Rule 47    dataType -> FLOAT
Rule 48    stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
Rule 49    stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
Rule 50    listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
Rule 51    listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
Rule 52    listOpChoice -> CONSTANT
Rule 53    listOpChoice -> EMPTY
Rule 54    stringOp -> SPLIT
Rule 55    stringOp -> STRIP
Rule 56    stringOp -> CONCAT
Rule 57    stringOp -> COPY
Rule 58    listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON
Rule 59    list -> LBRACK listElem RBRACK
Rule 60    listElem -> validListUnionValues
Rule 61    listElem -> validListUnionValues COMMA listElem
Rule 62    listElem -> EMPTY
Rule 63    listEval -> IDENTIFIER LISTVALUE
Rule 64    validListUnionValues -> CONSTANT
Rule 65    validListUnionValues -> FLOATVALUE
Rule 66    validListUnionValues -> booleanValue
Rule 67    validListUnionValues -> STRINGVALUE
Rule 68    validListUnionValues -> LISTVALUE
Rule 69    typeCastToInt -> TC_INT IDENTIFIER SEMICOLON
Rule 70    typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON
Rule 71    WhileLoop -> WHILE Condition COLON Body
Rule 72    Body -> statementMore
Rule 73    statementMore -> statementMoreCont
Rule 74    statementMore -> END
Rule 75    statementMoreCont -> statement1 statementMore
Rule 76    ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body
Rule 77    Increment -> SEMICOLON Operand Options
Rule 78    Options -> Iterator
Rule 79    Options -> AssignmentOperator Operand
Rule 80    IfThenElse -> IF Condition Body addElif
Rule 81    addElif -> addElif2
Rule 82    addElif -> FI
Rule 83    addElif -> ELSE Body
Rule 84    addElif2 -> elifClause addElif
Rule 85    elifClause -> ELIF Condition Body
Rule 86    Condition -> RelationExpression
Rule 87    Condition -> LPAREN Condition Compound Condition RPAREN
Rule 88    Condition -> LPAREN NOT Condition RPAREN
Rule 89    Operand -> IDENTIFIER
Rule 90    Operand -> CONSTANT
Rule 91    Operand -> booleanValue
Rule 92    Operand -> FLOATVALUE
Rule 93    Operand -> LISTVALUE
Rule 94    Compound -> AND
Rule 95    Compound -> OR
Rule 96    Iterator -> PLUSPLUS
Rule 97    Iterator -> MINUSMINUS
Rule 98    Iterator -> EMPTY
Rule 99    AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON
Rule 100   AssignmentOption -> EQUAL AssignmentOptionChain
Rule 101   AssignmentOption -> AssignmentOperator AssignmentOptions2
Rule 102   AssignmentOptions2 -> CONSTANT
Rule 103   AssignmentOptions2 -> ArithmeticExpression
Rule 104   AssignmentOptionChain -> listEval
Rule 105   AssignmentOptionChain -> IDENTIFIER
Rule 106   AssignmentOptionChain -> Function
Rule 107   AssignmentOptionChain -> AssignmentOptions2
Rule 108   AssignmentOperator -> PLUSEQUAL
Rule 109   AssignmentOperator -> MINUSEQUAL
Rule 110   AssignmentOperator -> MULTEQUAL
Rule 111   AssignmentOperator -> DIVEQUAL
Rule 112   AssignmentOperator -> MODEQUAL
Rule 113   expression -> ArithmeticExpression
Rule 114   expression -> listEval
Rule 115   expression -> list
Rule 116   expression -> RelationExpression
Rule 117   RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN
Rule 118   ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
Rule 119   ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN
Rule 120   ArithmeticOperator -> PLUS
Rule 121   ArithmeticOperator -> MINUS
Rule 122   ArithmeticOperator -> MULT
Rule 123   ArithmeticOperator -> DIV
Rule 124   ArithmeticOperator -> MOD
Rule 125   RelationOperator -> EQUALEQUAL
Rule 126   RelationOperator -> EQUAL
Rule 127   RelationOperator -> LESSTHAN
Rule 128   RelationOperator -> GREATERTHAN
Rule 129   RelationOperator -> GREATEREQ
Rule 130   RelationOperator -> LESSEREQ
Rule 131   RelationOperator -> NOTEQ
Rule 132   FunctionDefinition -> dataType Function COLON Body
Rule 133   Function -> IDENTIFIER LPAREN Parameter RPAREN
Rule 134   Parameter -> dataType IDENTIFIER
Rule 135   Parameter -> dataType IDENTIFIER COMMA Parameter
Rule 136   Parameter -> EMPTY
Rule 137   FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
Rule 138   FunctionCallParameter -> IDENTIFIER
Rule 139   FunctionCallParameter -> IDENTIFIER COMMA FunctionCallParameter
Rule 140   FunctionCallParameter -> EMPTY
Rule 141   returnDec -> RETURN CONSTANT SEMICOLON
Rule 142   returnDec -> RETURN IDENTIFIER SEMICOLON
Rule 143   returnDec -> RETURN expression SEMICOLON
Rule 144   returnDec -> RETURN SEMICOLON
Rule 145   booleanValue -> TRUE
Rule 146   booleanValue -> FALSE

Terminals, with rules where they appear

AND                  : 94
BAR                  : 41 41 42 42 43 43 44 44 58 58 99 99
BOOLEAN              : 46
COLON                : 71 132
COMMA                : 50 61 135 139
COMMENT              : 
CONCAT               : 56
CONSTANT             : 37 42 43 50 52 64 90 102 119 141
COPY                 : 57
DIV                  : 123
DIVEQUAL             : 111
ELIF                 : 85
ELSE                 : 83
EMPTY                : 35 53 62 98 136 140
END                  : 1 74
EQUAL                : 43 44 58 100 126
EQUALEQUAL           : 125
FALSE                : 146
FI                   : 82
FLOAT                : 47
FLOATVALUE           : 65 92
GREATEREQ            : 129
GREATERTHAN          : 118 119 128
IDENTIFIER           : 16 31 38 41 42 43 44 48 49 49 50 51 58 63 69 70 89 99 105 133 134 135 137 138 139 142
IF                   : 80
INSERT               : 50
INT                  : 45
KEYS                 : 
LBRACK               : 42 43 59
LESSEREQ             : 130
LESSTHAN             : 118 119 127
LISTVALUE            : 63 68 93
LPAREN               : 16 17 31 32 48 49 50 51 76 87 88 117 133 137
MINUS                : 121
MINUSEQUAL           : 109
MINUSMINUS           : 97
MOD                  : 124
MODEQUAL             : 112
MULT                 : 122
MULTEQUAL            : 110
NOT                  : 88
NOTEQ                : 131
OR                   : 95
PLUS                 : 34 120
PLUSEQUAL            : 108
PLUSPLUS             : 96
POP                  : 51
PRINT                : 17 32
RBRACK               : 42 43 59
READ                 : 16 31
RETURN               : 141 142 143 144
RPAREN               : 16 17 31 32 48 49 50 51 76 87 88 117 133 137
SEMICOLON            : 16 17 31 32 41 42 43 44 48 49 50 51 58 69 70 77 99 137 141 142 143 144
SPLIT                : 54
STRING               : 48
STRINGVALUE          : 36 67
STRIP                : 55
TC_FLOAT             : 70
TC_INT               : 69
TRUE                 : 145
WHILE                : 71
error                : 
for                  : 76

Nonterminals, with rules where they appear

ArithmeticExpression : 103 113
ArithmeticOperator   : 118
AssignmentHead       : 6 21 76
AssignmentOperator   : 79 101
AssignmentOption     : 99
AssignmentOptionChain : 100
AssignmentOptions2   : 101 107
Body                 : 71 76 80 83 85 132
Compound             : 87
Condition            : 71 76 80 85 87 87 88
ForLoop              : 8 23
Function             : 106 132
FunctionCall         : 12 27
FunctionCallParameter : 137 139
FunctionDefinition   : 11 26
IfThenElse           : 5 20
Increment            : 76
Iterator             : 78
Operand              : 77 79 117 117 118 118
Options              : 77
Parameter            : 133 135
RelationExpression   : 86 116
RelationOperator     : 117
WhileLoop            : 7 22
addElif              : 80 84
addElif2             : 81
booleanValue         : 66 91
content              : 17 32
dataType             : 41 42 43 44 132 134 135
declaration          : 3 18
elifClause           : 84
expression           : 4 19 43 44 143
identifierDeclaration : 39
list                 : 58 115
listDec              : 40
listElem             : 59 61
listEval             : 104 114
listOPStatement      : 15 30
listOpChoice         : 51
morePrint            : 33 34
returnDec            : 13 28
statement            : 2
statement1           : 75
statementMore        : 72 75
statementMoreCont    : 73
statementTop         : 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 30 0
stringOp             : 48 49
stringOpStatement    : 14 29
toPrint              : 33 34
typeCastToInt        : 9 24
typecastToFloat      : 10 25
validListUnionValues : 50 60 61

Parsing method: LALR

state 0

    (0) S' -> . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 1
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 1

    (0) S' -> statementTop .



state 2

    (13) statement -> returnDec . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 40
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 3

    (99) AssignmentHead -> BAR . IDENTIFIER AssignmentOption BAR SEMICOLON
    (41) identifierDeclaration -> BAR . dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> BAR . dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR . dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> BAR . dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> BAR . IDENTIFIER EQUAL list BAR SEMICOLON
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    IDENTIFIER      shift and go to state 42
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    dataType                       shift and go to state 41

state 4

    (16) statement -> READ . LPAREN IDENTIFIER RPAREN SEMICOLON statementTop

    LPAREN          shift and go to state 43


state 5

    (71) WhileLoop -> WHILE . Condition COLON Body
    (86) Condition -> . RelationExpression
    (87) Condition -> . LPAREN Condition Compound Condition RPAREN
    (88) Condition -> . LPAREN NOT Condition RPAREN
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 45

    RelationExpression             shift and go to state 44
    Condition                      shift and go to state 46

state 6

    (40) declaration -> listDec .

    END             reduce using rule 40 (declaration -> listDec .)
    READ            reduce using rule 40 (declaration -> listDec .)
    PRINT           reduce using rule 40 (declaration -> listDec .)
    IF              reduce using rule 40 (declaration -> listDec .)
    BAR             reduce using rule 40 (declaration -> listDec .)
    WHILE           reduce using rule 40 (declaration -> listDec .)
    for             reduce using rule 40 (declaration -> listDec .)
    TC_INT          reduce using rule 40 (declaration -> listDec .)
    TC_FLOAT        reduce using rule 40 (declaration -> listDec .)
    IDENTIFIER      reduce using rule 40 (declaration -> listDec .)
    RETURN          reduce using rule 40 (declaration -> listDec .)
    LESSTHAN        reduce using rule 40 (declaration -> listDec .)
    LBRACK          reduce using rule 40 (declaration -> listDec .)
    LPAREN          reduce using rule 40 (declaration -> listDec .)
    INT             reduce using rule 40 (declaration -> listDec .)
    BOOLEAN         reduce using rule 40 (declaration -> listDec .)
    FLOAT           reduce using rule 40 (declaration -> listDec .)


state 7

    (17) statement -> PRINT . LPAREN content RPAREN SEMICOLON statementTop

    LPAREN          shift and go to state 47


state 8

    (141) returnDec -> RETURN . CONSTANT SEMICOLON
    (142) returnDec -> RETURN . IDENTIFIER SEMICOLON
    (143) returnDec -> RETURN . expression SEMICOLON
    (144) returnDec -> RETURN . SEMICOLON
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    CONSTANT        shift and go to state 48
    IDENTIFIER      shift and go to state 50
    SEMICOLON       shift and go to state 49
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23

    listEval                       shift and go to state 17
    list                           shift and go to state 34
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    expression                     shift and go to state 51

state 9

    (69) typeCastToInt -> TC_INT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 52


state 10

    (10) statement -> typecastToFloat . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 53
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 11

    (5) statement -> IfThenElse . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 54
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 12

    (6) statement -> AssignmentHead . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 55
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 13

    (9) statement -> typeCastToInt . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 56
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 14

    (2) statementTop -> statement .

    $end            reduce using rule 2 (statementTop -> statement .)
    END             reduce using rule 2 (statementTop -> statement .)
    READ            reduce using rule 2 (statementTop -> statement .)
    PRINT           reduce using rule 2 (statementTop -> statement .)
    IF              reduce using rule 2 (statementTop -> statement .)
    BAR             reduce using rule 2 (statementTop -> statement .)
    WHILE           reduce using rule 2 (statementTop -> statement .)
    for             reduce using rule 2 (statementTop -> statement .)
    TC_INT          reduce using rule 2 (statementTop -> statement .)
    TC_FLOAT        reduce using rule 2 (statementTop -> statement .)
    IDENTIFIER      reduce using rule 2 (statementTop -> statement .)
    RETURN          reduce using rule 2 (statementTop -> statement .)
    LESSTHAN        reduce using rule 2 (statementTop -> statement .)
    LBRACK          reduce using rule 2 (statementTop -> statement .)
    LPAREN          reduce using rule 2 (statementTop -> statement .)
    INT             reduce using rule 2 (statementTop -> statement .)
    BOOLEAN         reduce using rule 2 (statementTop -> statement .)
    FLOAT           reduce using rule 2 (statementTop -> statement .)


state 15

    (137) FunctionCall -> IDENTIFIER . LPAREN FunctionCallParameter RPAREN SEMICOLON
    (48) stringOpStatement -> IDENTIFIER . stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> IDENTIFIER . stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> IDENTIFIER . INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> IDENTIFIER . POP LPAREN listOpChoice RPAREN SEMICOLON
    (63) listEval -> IDENTIFIER . LISTVALUE
    (54) stringOp -> . SPLIT
    (55) stringOp -> . STRIP
    (56) stringOp -> . CONCAT
    (57) stringOp -> . COPY

    LPAREN          shift and go to state 62
    INSERT          shift and go to state 57
    POP             shift and go to state 60
    LISTVALUE       shift and go to state 64
    SPLIT           shift and go to state 61
    STRIP           shift and go to state 63
    CONCAT          shift and go to state 65
    COPY            shift and go to state 58

    stringOp                       shift and go to state 59

state 16

    (11) statement -> FunctionDefinition . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 66
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    WhileLoop                      shift and go to state 28
    expression                     shift and go to state 39

state 17

    (114) expression -> listEval .

    END             reduce using rule 114 (expression -> listEval .)
    READ            reduce using rule 114 (expression -> listEval .)
    PRINT           reduce using rule 114 (expression -> listEval .)
    IF              reduce using rule 114 (expression -> listEval .)
    BAR             reduce using rule 114 (expression -> listEval .)
    WHILE           reduce using rule 114 (expression -> listEval .)
    for             reduce using rule 114 (expression -> listEval .)
    TC_INT          reduce using rule 114 (expression -> listEval .)
    TC_FLOAT        reduce using rule 114 (expression -> listEval .)
    IDENTIFIER      reduce using rule 114 (expression -> listEval .)
    RETURN          reduce using rule 114 (expression -> listEval .)
    LESSTHAN        reduce using rule 114 (expression -> listEval .)
    LBRACK          reduce using rule 114 (expression -> listEval .)
    LPAREN          reduce using rule 114 (expression -> listEval .)
    INT             reduce using rule 114 (expression -> listEval .)
    BOOLEAN         reduce using rule 114 (expression -> listEval .)
    FLOAT           reduce using rule 114 (expression -> listEval .)
    SEMICOLON       reduce using rule 114 (expression -> listEval .)


state 18

    (1) statementTop -> END .

    $end            reduce using rule 1 (statementTop -> END .)
    END             reduce using rule 1 (statementTop -> END .)
    READ            reduce using rule 1 (statementTop -> END .)
    PRINT           reduce using rule 1 (statementTop -> END .)
    IF              reduce using rule 1 (statementTop -> END .)
    BAR             reduce using rule 1 (statementTop -> END .)
    WHILE           reduce using rule 1 (statementTop -> END .)
    for             reduce using rule 1 (statementTop -> END .)
    TC_INT          reduce using rule 1 (statementTop -> END .)
    TC_FLOAT        reduce using rule 1 (statementTop -> END .)
    IDENTIFIER      reduce using rule 1 (statementTop -> END .)
    RETURN          reduce using rule 1 (statementTop -> END .)
    LESSTHAN        reduce using rule 1 (statementTop -> END .)
    LBRACK          reduce using rule 1 (statementTop -> END .)
    LPAREN          reduce using rule 1 (statementTop -> END .)
    INT             reduce using rule 1 (statementTop -> END .)
    BOOLEAN         reduce using rule 1 (statementTop -> END .)
    FLOAT           reduce using rule 1 (statementTop -> END .)


state 19

    (132) FunctionDefinition -> dataType . Function COLON Body
    (133) Function -> . IDENTIFIER LPAREN Parameter RPAREN

    IDENTIFIER      shift and go to state 68

    Function                       shift and go to state 67

state 20

    (113) expression -> ArithmeticExpression .

    END             reduce using rule 113 (expression -> ArithmeticExpression .)
    READ            reduce using rule 113 (expression -> ArithmeticExpression .)
    PRINT           reduce using rule 113 (expression -> ArithmeticExpression .)
    IF              reduce using rule 113 (expression -> ArithmeticExpression .)
    BAR             reduce using rule 113 (expression -> ArithmeticExpression .)
    WHILE           reduce using rule 113 (expression -> ArithmeticExpression .)
    for             reduce using rule 113 (expression -> ArithmeticExpression .)
    TC_INT          reduce using rule 113 (expression -> ArithmeticExpression .)
    TC_FLOAT        reduce using rule 113 (expression -> ArithmeticExpression .)
    IDENTIFIER      reduce using rule 113 (expression -> ArithmeticExpression .)
    RETURN          reduce using rule 113 (expression -> ArithmeticExpression .)
    LESSTHAN        reduce using rule 113 (expression -> ArithmeticExpression .)
    LBRACK          reduce using rule 113 (expression -> ArithmeticExpression .)
    LPAREN          reduce using rule 113 (expression -> ArithmeticExpression .)
    INT             reduce using rule 113 (expression -> ArithmeticExpression .)
    BOOLEAN         reduce using rule 113 (expression -> ArithmeticExpression .)
    FLOAT           reduce using rule 113 (expression -> ArithmeticExpression .)
    SEMICOLON       reduce using rule 113 (expression -> ArithmeticExpression .)


state 21

    (116) expression -> RelationExpression .

    END             reduce using rule 116 (expression -> RelationExpression .)
    READ            reduce using rule 116 (expression -> RelationExpression .)
    PRINT           reduce using rule 116 (expression -> RelationExpression .)
    IF              reduce using rule 116 (expression -> RelationExpression .)
    BAR             reduce using rule 116 (expression -> RelationExpression .)
    WHILE           reduce using rule 116 (expression -> RelationExpression .)
    for             reduce using rule 116 (expression -> RelationExpression .)
    TC_INT          reduce using rule 116 (expression -> RelationExpression .)
    TC_FLOAT        reduce using rule 116 (expression -> RelationExpression .)
    IDENTIFIER      reduce using rule 116 (expression -> RelationExpression .)
    RETURN          reduce using rule 116 (expression -> RelationExpression .)
    LESSTHAN        reduce using rule 116 (expression -> RelationExpression .)
    LBRACK          reduce using rule 116 (expression -> RelationExpression .)
    LPAREN          reduce using rule 116 (expression -> RelationExpression .)
    INT             reduce using rule 116 (expression -> RelationExpression .)
    BOOLEAN         reduce using rule 116 (expression -> RelationExpression .)
    FLOAT           reduce using rule 116 (expression -> RelationExpression .)
    SEMICOLON       reduce using rule 116 (expression -> RelationExpression .)


state 22

    (39) declaration -> identifierDeclaration .

    END             reduce using rule 39 (declaration -> identifierDeclaration .)
    READ            reduce using rule 39 (declaration -> identifierDeclaration .)
    PRINT           reduce using rule 39 (declaration -> identifierDeclaration .)
    IF              reduce using rule 39 (declaration -> identifierDeclaration .)
    BAR             reduce using rule 39 (declaration -> identifierDeclaration .)
    WHILE           reduce using rule 39 (declaration -> identifierDeclaration .)
    for             reduce using rule 39 (declaration -> identifierDeclaration .)
    TC_INT          reduce using rule 39 (declaration -> identifierDeclaration .)
    TC_FLOAT        reduce using rule 39 (declaration -> identifierDeclaration .)
    IDENTIFIER      reduce using rule 39 (declaration -> identifierDeclaration .)
    RETURN          reduce using rule 39 (declaration -> identifierDeclaration .)
    LESSTHAN        reduce using rule 39 (declaration -> identifierDeclaration .)
    LBRACK          reduce using rule 39 (declaration -> identifierDeclaration .)
    LPAREN          reduce using rule 39 (declaration -> identifierDeclaration .)
    INT             reduce using rule 39 (declaration -> identifierDeclaration .)
    BOOLEAN         reduce using rule 39 (declaration -> identifierDeclaration .)
    FLOAT           reduce using rule 39 (declaration -> identifierDeclaration .)


state 23

    (117) RelationExpression -> LPAREN . Operand RelationOperator Operand RPAREN
    (89) Operand -> . IDENTIFIER
    (90) Operand -> . CONSTANT
    (91) Operand -> . booleanValue
    (92) Operand -> . FLOATVALUE
    (93) Operand -> . LISTVALUE
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 76
    CONSTANT        shift and go to state 74
    FLOATVALUE      shift and go to state 71
    LISTVALUE       shift and go to state 75
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    Operand                        shift and go to state 73
    booleanValue                   shift and go to state 69

state 24

    (3) statement -> declaration . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 77
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 25

    (8) statement -> ForLoop . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 78
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    WhileLoop                      shift and go to state 28
    expression                     shift and go to state 39

state 26

    (46) dataType -> BOOLEAN .

    IDENTIFIER      reduce using rule 46 (dataType -> BOOLEAN .)


state 27

    (80) IfThenElse -> IF . Condition Body addElif
    (86) Condition -> . RelationExpression
    (87) Condition -> . LPAREN Condition Compound Condition RPAREN
    (88) Condition -> . LPAREN NOT Condition RPAREN
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 45

    RelationExpression             shift and go to state 44
    Condition                      shift and go to state 79

state 28

    (7) statement -> WhileLoop . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 80
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 29

    (14) statement -> stringOpStatement . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 81
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 30

    (76) ForLoop -> for . LPAREN AssignmentHead Condition Increment RPAREN Body

    LPAREN          shift and go to state 82


state 31

    (45) dataType -> INT .

    IDENTIFIER      reduce using rule 45 (dataType -> INT .)


state 32

    (70) typecastToFloat -> TC_FLOAT . IDENTIFIER SEMICOLON

    IDENTIFIER      shift and go to state 83


state 33

    (47) dataType -> FLOAT .

    IDENTIFIER      reduce using rule 47 (dataType -> FLOAT .)


state 34

    (115) expression -> list .

    END             reduce using rule 115 (expression -> list .)
    READ            reduce using rule 115 (expression -> list .)
    PRINT           reduce using rule 115 (expression -> list .)
    IF              reduce using rule 115 (expression -> list .)
    BAR             reduce using rule 115 (expression -> list .)
    WHILE           reduce using rule 115 (expression -> list .)
    for             reduce using rule 115 (expression -> list .)
    TC_INT          reduce using rule 115 (expression -> list .)
    TC_FLOAT        reduce using rule 115 (expression -> list .)
    IDENTIFIER      reduce using rule 115 (expression -> list .)
    RETURN          reduce using rule 115 (expression -> list .)
    LESSTHAN        reduce using rule 115 (expression -> list .)
    LBRACK          reduce using rule 115 (expression -> list .)
    LPAREN          reduce using rule 115 (expression -> list .)
    INT             reduce using rule 115 (expression -> list .)
    BOOLEAN         reduce using rule 115 (expression -> list .)
    FLOAT           reduce using rule 115 (expression -> list .)
    SEMICOLON       reduce using rule 115 (expression -> list .)


state 35

    (59) list -> LBRACK . listElem RBRACK
    (60) listElem -> . validListUnionValues
    (61) listElem -> . validListUnionValues COMMA listElem
    (62) listElem -> . EMPTY
    (64) validListUnionValues -> . CONSTANT
    (65) validListUnionValues -> . FLOATVALUE
    (66) validListUnionValues -> . booleanValue
    (67) validListUnionValues -> . STRINGVALUE
    (68) validListUnionValues -> . LISTVALUE
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    EMPTY           shift and go to state 91
    CONSTANT        shift and go to state 85
    FLOATVALUE      shift and go to state 84
    STRINGVALUE     shift and go to state 87
    LISTVALUE       shift and go to state 89
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    listElem                       shift and go to state 88
    booleanValue                   shift and go to state 90
    validListUnionValues           shift and go to state 86

state 36

    (118) ArithmeticExpression -> LESSTHAN . Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> LESSTHAN . CONSTANT GREATERTHAN
    (89) Operand -> . IDENTIFIER
    (90) Operand -> . CONSTANT
    (91) Operand -> . booleanValue
    (92) Operand -> . FLOATVALUE
    (93) Operand -> . LISTVALUE
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    CONSTANT        shift and go to state 92
    IDENTIFIER      shift and go to state 76
    FLOATVALUE      shift and go to state 71
    LISTVALUE       shift and go to state 75
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    Operand                        shift and go to state 93
    booleanValue                   shift and go to state 69

state 37

    (15) statement -> listOPStatement . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 94
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    listOPStatement                shift and go to state 37
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    AssignmentHead                 shift and go to state 12
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 38

    (12) statement -> FunctionCall . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 95
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 39

    (4) statement -> expression . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 96
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 40

    (13) statement -> returnDec statementTop .

    $end            reduce using rule 13 (statement -> returnDec statementTop .)
    END             reduce using rule 13 (statement -> returnDec statementTop .)
    READ            reduce using rule 13 (statement -> returnDec statementTop .)
    PRINT           reduce using rule 13 (statement -> returnDec statementTop .)
    IF              reduce using rule 13 (statement -> returnDec statementTop .)
    BAR             reduce using rule 13 (statement -> returnDec statementTop .)
    WHILE           reduce using rule 13 (statement -> returnDec statementTop .)
    for             reduce using rule 13 (statement -> returnDec statementTop .)
    TC_INT          reduce using rule 13 (statement -> returnDec statementTop .)
    TC_FLOAT        reduce using rule 13 (statement -> returnDec statementTop .)
    IDENTIFIER      reduce using rule 13 (statement -> returnDec statementTop .)
    RETURN          reduce using rule 13 (statement -> returnDec statementTop .)
    LESSTHAN        reduce using rule 13 (statement -> returnDec statementTop .)
    LBRACK          reduce using rule 13 (statement -> returnDec statementTop .)
    LPAREN          reduce using rule 13 (statement -> returnDec statementTop .)
    INT             reduce using rule 13 (statement -> returnDec statementTop .)
    BOOLEAN         reduce using rule 13 (statement -> returnDec statementTop .)
    FLOAT           reduce using rule 13 (statement -> returnDec statementTop .)


state 41

    (41) identifierDeclaration -> BAR dataType . IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> BAR dataType . IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType . IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> BAR dataType . IDENTIFIER EQUAL expression BAR SEMICOLON

    IDENTIFIER      shift and go to state 97


state 42

    (99) AssignmentHead -> BAR IDENTIFIER . AssignmentOption BAR SEMICOLON
    (58) listDec -> BAR IDENTIFIER . EQUAL list BAR SEMICOLON
    (100) AssignmentOption -> . EQUAL AssignmentOptionChain
    (101) AssignmentOption -> . AssignmentOperator AssignmentOptions2
    (108) AssignmentOperator -> . PLUSEQUAL
    (109) AssignmentOperator -> . MINUSEQUAL
    (110) AssignmentOperator -> . MULTEQUAL
    (111) AssignmentOperator -> . DIVEQUAL
    (112) AssignmentOperator -> . MODEQUAL

    EQUAL           shift and go to state 103
    PLUSEQUAL       shift and go to state 99
    MINUSEQUAL      shift and go to state 102
    MULTEQUAL       shift and go to state 104
    DIVEQUAL        shift and go to state 98
    MODEQUAL        shift and go to state 105

    AssignmentOption               shift and go to state 100
    AssignmentOperator             shift and go to state 101

state 43

    (16) statement -> READ LPAREN . IDENTIFIER RPAREN SEMICOLON statementTop

    IDENTIFIER      shift and go to state 106


state 44

    (86) Condition -> RelationExpression .

    RPAREN          reduce using rule 86 (Condition -> RelationExpression .)
    SEMICOLON       reduce using rule 86 (Condition -> RelationExpression .)
    AND             reduce using rule 86 (Condition -> RelationExpression .)
    OR              reduce using rule 86 (Condition -> RelationExpression .)
    END             reduce using rule 86 (Condition -> RelationExpression .)
    READ            reduce using rule 86 (Condition -> RelationExpression .)
    PRINT           reduce using rule 86 (Condition -> RelationExpression .)
    IF              reduce using rule 86 (Condition -> RelationExpression .)
    BAR             reduce using rule 86 (Condition -> RelationExpression .)
    WHILE           reduce using rule 86 (Condition -> RelationExpression .)
    for             reduce using rule 86 (Condition -> RelationExpression .)
    TC_INT          reduce using rule 86 (Condition -> RelationExpression .)
    TC_FLOAT        reduce using rule 86 (Condition -> RelationExpression .)
    IDENTIFIER      reduce using rule 86 (Condition -> RelationExpression .)
    RETURN          reduce using rule 86 (Condition -> RelationExpression .)
    LESSTHAN        reduce using rule 86 (Condition -> RelationExpression .)
    LBRACK          reduce using rule 86 (Condition -> RelationExpression .)
    LPAREN          reduce using rule 86 (Condition -> RelationExpression .)
    INT             reduce using rule 86 (Condition -> RelationExpression .)
    BOOLEAN         reduce using rule 86 (Condition -> RelationExpression .)
    FLOAT           reduce using rule 86 (Condition -> RelationExpression .)
    COLON           reduce using rule 86 (Condition -> RelationExpression .)


state 45

    (87) Condition -> LPAREN . Condition Compound Condition RPAREN
    (88) Condition -> LPAREN . NOT Condition RPAREN
    (117) RelationExpression -> LPAREN . Operand RelationOperator Operand RPAREN
    (86) Condition -> . RelationExpression
    (87) Condition -> . LPAREN Condition Compound Condition RPAREN
    (88) Condition -> . LPAREN NOT Condition RPAREN
    (89) Operand -> . IDENTIFIER
    (90) Operand -> . CONSTANT
    (91) Operand -> . booleanValue
    (92) Operand -> . FLOATVALUE
    (93) Operand -> . LISTVALUE
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    NOT             shift and go to state 107
    LPAREN          shift and go to state 45
    IDENTIFIER      shift and go to state 76
    CONSTANT        shift and go to state 74
    FLOATVALUE      shift and go to state 71
    LISTVALUE       shift and go to state 75
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    RelationExpression             shift and go to state 44
    Operand                        shift and go to state 73
    booleanValue                   shift and go to state 69
    Condition                      shift and go to state 108

state 46

    (71) WhileLoop -> WHILE Condition . COLON Body

    COLON           shift and go to state 109


state 47

    (17) statement -> PRINT LPAREN . content RPAREN SEMICOLON statementTop
    (33) content -> . toPrint morePrint
    (36) toPrint -> . STRINGVALUE
    (37) toPrint -> . CONSTANT
    (38) toPrint -> . IDENTIFIER

    STRINGVALUE     shift and go to state 113
    CONSTANT        shift and go to state 112
    IDENTIFIER      shift and go to state 110

    content                        shift and go to state 111
    toPrint                        shift and go to state 114

state 48

    (141) returnDec -> RETURN CONSTANT . SEMICOLON

    SEMICOLON       shift and go to state 115


state 49

    (144) returnDec -> RETURN SEMICOLON .

    END             reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    READ            reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    PRINT           reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    IF              reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    BAR             reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    WHILE           reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    for             reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    TC_INT          reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    TC_FLOAT        reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    IDENTIFIER      reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    RETURN          reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    LESSTHAN        reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    LBRACK          reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    LPAREN          reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    INT             reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    BOOLEAN         reduce using rule 144 (returnDec -> RETURN SEMICOLON .)
    FLOAT           reduce using rule 144 (returnDec -> RETURN SEMICOLON .)


state 50

    (142) returnDec -> RETURN IDENTIFIER . SEMICOLON
    (63) listEval -> IDENTIFIER . LISTVALUE

    SEMICOLON       shift and go to state 116
    LISTVALUE       shift and go to state 64


state 51

    (143) returnDec -> RETURN expression . SEMICOLON

    SEMICOLON       shift and go to state 117


state 52

    (69) typeCastToInt -> TC_INT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 118


state 53

    (10) statement -> typecastToFloat statementTop .

    $end            reduce using rule 10 (statement -> typecastToFloat statementTop .)
    END             reduce using rule 10 (statement -> typecastToFloat statementTop .)
    READ            reduce using rule 10 (statement -> typecastToFloat statementTop .)
    PRINT           reduce using rule 10 (statement -> typecastToFloat statementTop .)
    IF              reduce using rule 10 (statement -> typecastToFloat statementTop .)
    BAR             reduce using rule 10 (statement -> typecastToFloat statementTop .)
    WHILE           reduce using rule 10 (statement -> typecastToFloat statementTop .)
    for             reduce using rule 10 (statement -> typecastToFloat statementTop .)
    TC_INT          reduce using rule 10 (statement -> typecastToFloat statementTop .)
    TC_FLOAT        reduce using rule 10 (statement -> typecastToFloat statementTop .)
    IDENTIFIER      reduce using rule 10 (statement -> typecastToFloat statementTop .)
    RETURN          reduce using rule 10 (statement -> typecastToFloat statementTop .)
    LESSTHAN        reduce using rule 10 (statement -> typecastToFloat statementTop .)
    LBRACK          reduce using rule 10 (statement -> typecastToFloat statementTop .)
    LPAREN          reduce using rule 10 (statement -> typecastToFloat statementTop .)
    INT             reduce using rule 10 (statement -> typecastToFloat statementTop .)
    BOOLEAN         reduce using rule 10 (statement -> typecastToFloat statementTop .)
    FLOAT           reduce using rule 10 (statement -> typecastToFloat statementTop .)


state 54

    (5) statement -> IfThenElse statementTop .

    $end            reduce using rule 5 (statement -> IfThenElse statementTop .)
    END             reduce using rule 5 (statement -> IfThenElse statementTop .)
    READ            reduce using rule 5 (statement -> IfThenElse statementTop .)
    PRINT           reduce using rule 5 (statement -> IfThenElse statementTop .)
    IF              reduce using rule 5 (statement -> IfThenElse statementTop .)
    BAR             reduce using rule 5 (statement -> IfThenElse statementTop .)
    WHILE           reduce using rule 5 (statement -> IfThenElse statementTop .)
    for             reduce using rule 5 (statement -> IfThenElse statementTop .)
    TC_INT          reduce using rule 5 (statement -> IfThenElse statementTop .)
    TC_FLOAT        reduce using rule 5 (statement -> IfThenElse statementTop .)
    IDENTIFIER      reduce using rule 5 (statement -> IfThenElse statementTop .)
    RETURN          reduce using rule 5 (statement -> IfThenElse statementTop .)
    LESSTHAN        reduce using rule 5 (statement -> IfThenElse statementTop .)
    LBRACK          reduce using rule 5 (statement -> IfThenElse statementTop .)
    LPAREN          reduce using rule 5 (statement -> IfThenElse statementTop .)
    INT             reduce using rule 5 (statement -> IfThenElse statementTop .)
    BOOLEAN         reduce using rule 5 (statement -> IfThenElse statementTop .)
    FLOAT           reduce using rule 5 (statement -> IfThenElse statementTop .)


state 55

    (6) statement -> AssignmentHead statementTop .

    $end            reduce using rule 6 (statement -> AssignmentHead statementTop .)
    END             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    READ            reduce using rule 6 (statement -> AssignmentHead statementTop .)
    PRINT           reduce using rule 6 (statement -> AssignmentHead statementTop .)
    IF              reduce using rule 6 (statement -> AssignmentHead statementTop .)
    BAR             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    WHILE           reduce using rule 6 (statement -> AssignmentHead statementTop .)
    for             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    TC_INT          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    TC_FLOAT        reduce using rule 6 (statement -> AssignmentHead statementTop .)
    IDENTIFIER      reduce using rule 6 (statement -> AssignmentHead statementTop .)
    RETURN          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LESSTHAN        reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LBRACK          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    LPAREN          reduce using rule 6 (statement -> AssignmentHead statementTop .)
    INT             reduce using rule 6 (statement -> AssignmentHead statementTop .)
    BOOLEAN         reduce using rule 6 (statement -> AssignmentHead statementTop .)
    FLOAT           reduce using rule 6 (statement -> AssignmentHead statementTop .)


state 56

    (9) statement -> typeCastToInt statementTop .

    $end            reduce using rule 9 (statement -> typeCastToInt statementTop .)
    END             reduce using rule 9 (statement -> typeCastToInt statementTop .)
    READ            reduce using rule 9 (statement -> typeCastToInt statementTop .)
    PRINT           reduce using rule 9 (statement -> typeCastToInt statementTop .)
    IF              reduce using rule 9 (statement -> typeCastToInt statementTop .)
    BAR             reduce using rule 9 (statement -> typeCastToInt statementTop .)
    WHILE           reduce using rule 9 (statement -> typeCastToInt statementTop .)
    for             reduce using rule 9 (statement -> typeCastToInt statementTop .)
    TC_INT          reduce using rule 9 (statement -> typeCastToInt statementTop .)
    TC_FLOAT        reduce using rule 9 (statement -> typeCastToInt statementTop .)
    IDENTIFIER      reduce using rule 9 (statement -> typeCastToInt statementTop .)
    RETURN          reduce using rule 9 (statement -> typeCastToInt statementTop .)
    LESSTHAN        reduce using rule 9 (statement -> typeCastToInt statementTop .)
    LBRACK          reduce using rule 9 (statement -> typeCastToInt statementTop .)
    LPAREN          reduce using rule 9 (statement -> typeCastToInt statementTop .)
    INT             reduce using rule 9 (statement -> typeCastToInt statementTop .)
    BOOLEAN         reduce using rule 9 (statement -> typeCastToInt statementTop .)
    FLOAT           reduce using rule 9 (statement -> typeCastToInt statementTop .)


state 57

    (50) listOPStatement -> IDENTIFIER INSERT . LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON

    LPAREN          shift and go to state 119


state 58

    (57) stringOp -> COPY .

    LPAREN          reduce using rule 57 (stringOp -> COPY .)


state 59

    (48) stringOpStatement -> IDENTIFIER stringOp . LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> IDENTIFIER stringOp . LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN          shift and go to state 120


state 60

    (51) listOPStatement -> IDENTIFIER POP . LPAREN listOpChoice RPAREN SEMICOLON

    LPAREN          shift and go to state 121


state 61

    (54) stringOp -> SPLIT .

    LPAREN          reduce using rule 54 (stringOp -> SPLIT .)


state 62

    (137) FunctionCall -> IDENTIFIER LPAREN . FunctionCallParameter RPAREN SEMICOLON
    (138) FunctionCallParameter -> . IDENTIFIER
    (139) FunctionCallParameter -> . IDENTIFIER COMMA FunctionCallParameter
    (140) FunctionCallParameter -> . EMPTY

    IDENTIFIER      shift and go to state 123
    EMPTY           shift and go to state 124

    FunctionCallParameter          shift and go to state 122

state 63

    (55) stringOp -> STRIP .

    LPAREN          reduce using rule 55 (stringOp -> STRIP .)


state 64

    (63) listEval -> IDENTIFIER LISTVALUE .

    END             reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    READ            reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    PRINT           reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    IF              reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    BAR             reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    WHILE           reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    for             reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    TC_INT          reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    TC_FLOAT        reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    IDENTIFIER      reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    RETURN          reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    LESSTHAN        reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    LBRACK          reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    LPAREN          reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    INT             reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    BOOLEAN         reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    FLOAT           reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)
    SEMICOLON       reduce using rule 63 (listEval -> IDENTIFIER LISTVALUE .)


state 65

    (56) stringOp -> CONCAT .

    LPAREN          reduce using rule 56 (stringOp -> CONCAT .)


state 66

    (11) statement -> FunctionDefinition statementTop .

    $end            reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    END             reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    READ            reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    PRINT           reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    IF              reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    BAR             reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    WHILE           reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    for             reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    TC_INT          reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    TC_FLOAT        reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    IDENTIFIER      reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    RETURN          reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    LESSTHAN        reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    LBRACK          reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    LPAREN          reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    INT             reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    BOOLEAN         reduce using rule 11 (statement -> FunctionDefinition statementTop .)
    FLOAT           reduce using rule 11 (statement -> FunctionDefinition statementTop .)


state 67

    (132) FunctionDefinition -> dataType Function . COLON Body

    COLON           shift and go to state 125


state 68

    (133) Function -> IDENTIFIER . LPAREN Parameter RPAREN

    LPAREN          shift and go to state 126


state 69

    (91) Operand -> booleanValue .

    GREATERTHAN     reduce using rule 91 (Operand -> booleanValue .)
    PLUS            reduce using rule 91 (Operand -> booleanValue .)
    MINUS           reduce using rule 91 (Operand -> booleanValue .)
    MULT            reduce using rule 91 (Operand -> booleanValue .)
    DIV             reduce using rule 91 (Operand -> booleanValue .)
    MOD             reduce using rule 91 (Operand -> booleanValue .)
    RPAREN          reduce using rule 91 (Operand -> booleanValue .)
    EQUALEQUAL      reduce using rule 91 (Operand -> booleanValue .)
    EQUAL           reduce using rule 91 (Operand -> booleanValue .)
    LESSTHAN        reduce using rule 91 (Operand -> booleanValue .)
    GREATEREQ       reduce using rule 91 (Operand -> booleanValue .)
    LESSEREQ        reduce using rule 91 (Operand -> booleanValue .)
    NOTEQ           reduce using rule 91 (Operand -> booleanValue .)
    PLUSPLUS        reduce using rule 91 (Operand -> booleanValue .)
    MINUSMINUS      reduce using rule 91 (Operand -> booleanValue .)
    EMPTY           reduce using rule 91 (Operand -> booleanValue .)
    PLUSEQUAL       reduce using rule 91 (Operand -> booleanValue .)
    MINUSEQUAL      reduce using rule 91 (Operand -> booleanValue .)
    MULTEQUAL       reduce using rule 91 (Operand -> booleanValue .)
    DIVEQUAL        reduce using rule 91 (Operand -> booleanValue .)
    MODEQUAL        reduce using rule 91 (Operand -> booleanValue .)


state 70

    (145) booleanValue -> TRUE .

    PLUSPLUS        reduce using rule 145 (booleanValue -> TRUE .)
    MINUSMINUS      reduce using rule 145 (booleanValue -> TRUE .)
    EMPTY           reduce using rule 145 (booleanValue -> TRUE .)
    PLUSEQUAL       reduce using rule 145 (booleanValue -> TRUE .)
    MINUSEQUAL      reduce using rule 145 (booleanValue -> TRUE .)
    MULTEQUAL       reduce using rule 145 (booleanValue -> TRUE .)
    DIVEQUAL        reduce using rule 145 (booleanValue -> TRUE .)
    MODEQUAL        reduce using rule 145 (booleanValue -> TRUE .)
    EQUALEQUAL      reduce using rule 145 (booleanValue -> TRUE .)
    EQUAL           reduce using rule 145 (booleanValue -> TRUE .)
    LESSTHAN        reduce using rule 145 (booleanValue -> TRUE .)
    GREATERTHAN     reduce using rule 145 (booleanValue -> TRUE .)
    GREATEREQ       reduce using rule 145 (booleanValue -> TRUE .)
    LESSEREQ        reduce using rule 145 (booleanValue -> TRUE .)
    NOTEQ           reduce using rule 145 (booleanValue -> TRUE .)
    RPAREN          reduce using rule 145 (booleanValue -> TRUE .)
    COMMA           reduce using rule 145 (booleanValue -> TRUE .)
    RBRACK          reduce using rule 145 (booleanValue -> TRUE .)
    PLUS            reduce using rule 145 (booleanValue -> TRUE .)
    MINUS           reduce using rule 145 (booleanValue -> TRUE .)
    MULT            reduce using rule 145 (booleanValue -> TRUE .)
    DIV             reduce using rule 145 (booleanValue -> TRUE .)
    MOD             reduce using rule 145 (booleanValue -> TRUE .)


state 71

    (92) Operand -> FLOATVALUE .

    GREATERTHAN     reduce using rule 92 (Operand -> FLOATVALUE .)
    PLUS            reduce using rule 92 (Operand -> FLOATVALUE .)
    MINUS           reduce using rule 92 (Operand -> FLOATVALUE .)
    MULT            reduce using rule 92 (Operand -> FLOATVALUE .)
    DIV             reduce using rule 92 (Operand -> FLOATVALUE .)
    MOD             reduce using rule 92 (Operand -> FLOATVALUE .)
    RPAREN          reduce using rule 92 (Operand -> FLOATVALUE .)
    EQUALEQUAL      reduce using rule 92 (Operand -> FLOATVALUE .)
    EQUAL           reduce using rule 92 (Operand -> FLOATVALUE .)
    LESSTHAN        reduce using rule 92 (Operand -> FLOATVALUE .)
    GREATEREQ       reduce using rule 92 (Operand -> FLOATVALUE .)
    LESSEREQ        reduce using rule 92 (Operand -> FLOATVALUE .)
    NOTEQ           reduce using rule 92 (Operand -> FLOATVALUE .)
    PLUSPLUS        reduce using rule 92 (Operand -> FLOATVALUE .)
    MINUSMINUS      reduce using rule 92 (Operand -> FLOATVALUE .)
    EMPTY           reduce using rule 92 (Operand -> FLOATVALUE .)
    PLUSEQUAL       reduce using rule 92 (Operand -> FLOATVALUE .)
    MINUSEQUAL      reduce using rule 92 (Operand -> FLOATVALUE .)
    MULTEQUAL       reduce using rule 92 (Operand -> FLOATVALUE .)
    DIVEQUAL        reduce using rule 92 (Operand -> FLOATVALUE .)
    MODEQUAL        reduce using rule 92 (Operand -> FLOATVALUE .)


state 72

    (146) booleanValue -> FALSE .

    PLUSPLUS        reduce using rule 146 (booleanValue -> FALSE .)
    MINUSMINUS      reduce using rule 146 (booleanValue -> FALSE .)
    EMPTY           reduce using rule 146 (booleanValue -> FALSE .)
    PLUSEQUAL       reduce using rule 146 (booleanValue -> FALSE .)
    MINUSEQUAL      reduce using rule 146 (booleanValue -> FALSE .)
    MULTEQUAL       reduce using rule 146 (booleanValue -> FALSE .)
    DIVEQUAL        reduce using rule 146 (booleanValue -> FALSE .)
    MODEQUAL        reduce using rule 146 (booleanValue -> FALSE .)
    EQUALEQUAL      reduce using rule 146 (booleanValue -> FALSE .)
    EQUAL           reduce using rule 146 (booleanValue -> FALSE .)
    LESSTHAN        reduce using rule 146 (booleanValue -> FALSE .)
    GREATERTHAN     reduce using rule 146 (booleanValue -> FALSE .)
    GREATEREQ       reduce using rule 146 (booleanValue -> FALSE .)
    LESSEREQ        reduce using rule 146 (booleanValue -> FALSE .)
    NOTEQ           reduce using rule 146 (booleanValue -> FALSE .)
    RPAREN          reduce using rule 146 (booleanValue -> FALSE .)
    COMMA           reduce using rule 146 (booleanValue -> FALSE .)
    RBRACK          reduce using rule 146 (booleanValue -> FALSE .)
    PLUS            reduce using rule 146 (booleanValue -> FALSE .)
    MINUS           reduce using rule 146 (booleanValue -> FALSE .)
    MULT            reduce using rule 146 (booleanValue -> FALSE .)
    DIV             reduce using rule 146 (booleanValue -> FALSE .)
    MOD             reduce using rule 146 (booleanValue -> FALSE .)


state 73

    (117) RelationExpression -> LPAREN Operand . RelationOperator Operand RPAREN
    (125) RelationOperator -> . EQUALEQUAL
    (126) RelationOperator -> . EQUAL
    (127) RelationOperator -> . LESSTHAN
    (128) RelationOperator -> . GREATERTHAN
    (129) RelationOperator -> . GREATEREQ
    (130) RelationOperator -> . LESSEREQ
    (131) RelationOperator -> . NOTEQ

    EQUALEQUAL      shift and go to state 133
    EQUAL           shift and go to state 129
    LESSTHAN        shift and go to state 131
    GREATERTHAN     shift and go to state 132
    GREATEREQ       shift and go to state 130
    LESSEREQ        shift and go to state 128
    NOTEQ           shift and go to state 127

    RelationOperator               shift and go to state 134

state 74

    (90) Operand -> CONSTANT .

    GREATERTHAN     reduce using rule 90 (Operand -> CONSTANT .)
    RPAREN          reduce using rule 90 (Operand -> CONSTANT .)
    EQUALEQUAL      reduce using rule 90 (Operand -> CONSTANT .)
    EQUAL           reduce using rule 90 (Operand -> CONSTANT .)
    LESSTHAN        reduce using rule 90 (Operand -> CONSTANT .)
    GREATEREQ       reduce using rule 90 (Operand -> CONSTANT .)
    LESSEREQ        reduce using rule 90 (Operand -> CONSTANT .)
    NOTEQ           reduce using rule 90 (Operand -> CONSTANT .)
    PLUSPLUS        reduce using rule 90 (Operand -> CONSTANT .)
    MINUSMINUS      reduce using rule 90 (Operand -> CONSTANT .)
    EMPTY           reduce using rule 90 (Operand -> CONSTANT .)
    PLUSEQUAL       reduce using rule 90 (Operand -> CONSTANT .)
    MINUSEQUAL      reduce using rule 90 (Operand -> CONSTANT .)
    MULTEQUAL       reduce using rule 90 (Operand -> CONSTANT .)
    DIVEQUAL        reduce using rule 90 (Operand -> CONSTANT .)
    MODEQUAL        reduce using rule 90 (Operand -> CONSTANT .)


state 75

    (93) Operand -> LISTVALUE .

    GREATERTHAN     reduce using rule 93 (Operand -> LISTVALUE .)
    PLUS            reduce using rule 93 (Operand -> LISTVALUE .)
    MINUS           reduce using rule 93 (Operand -> LISTVALUE .)
    MULT            reduce using rule 93 (Operand -> LISTVALUE .)
    DIV             reduce using rule 93 (Operand -> LISTVALUE .)
    MOD             reduce using rule 93 (Operand -> LISTVALUE .)
    RPAREN          reduce using rule 93 (Operand -> LISTVALUE .)
    EQUALEQUAL      reduce using rule 93 (Operand -> LISTVALUE .)
    EQUAL           reduce using rule 93 (Operand -> LISTVALUE .)
    LESSTHAN        reduce using rule 93 (Operand -> LISTVALUE .)
    GREATEREQ       reduce using rule 93 (Operand -> LISTVALUE .)
    LESSEREQ        reduce using rule 93 (Operand -> LISTVALUE .)
    NOTEQ           reduce using rule 93 (Operand -> LISTVALUE .)
    PLUSPLUS        reduce using rule 93 (Operand -> LISTVALUE .)
    MINUSMINUS      reduce using rule 93 (Operand -> LISTVALUE .)
    EMPTY           reduce using rule 93 (Operand -> LISTVALUE .)
    PLUSEQUAL       reduce using rule 93 (Operand -> LISTVALUE .)
    MINUSEQUAL      reduce using rule 93 (Operand -> LISTVALUE .)
    MULTEQUAL       reduce using rule 93 (Operand -> LISTVALUE .)
    DIVEQUAL        reduce using rule 93 (Operand -> LISTVALUE .)
    MODEQUAL        reduce using rule 93 (Operand -> LISTVALUE .)


state 76

    (89) Operand -> IDENTIFIER .

    GREATERTHAN     reduce using rule 89 (Operand -> IDENTIFIER .)
    PLUS            reduce using rule 89 (Operand -> IDENTIFIER .)
    MINUS           reduce using rule 89 (Operand -> IDENTIFIER .)
    MULT            reduce using rule 89 (Operand -> IDENTIFIER .)
    DIV             reduce using rule 89 (Operand -> IDENTIFIER .)
    MOD             reduce using rule 89 (Operand -> IDENTIFIER .)
    RPAREN          reduce using rule 89 (Operand -> IDENTIFIER .)
    EQUALEQUAL      reduce using rule 89 (Operand -> IDENTIFIER .)
    EQUAL           reduce using rule 89 (Operand -> IDENTIFIER .)
    LESSTHAN        reduce using rule 89 (Operand -> IDENTIFIER .)
    GREATEREQ       reduce using rule 89 (Operand -> IDENTIFIER .)
    LESSEREQ        reduce using rule 89 (Operand -> IDENTIFIER .)
    NOTEQ           reduce using rule 89 (Operand -> IDENTIFIER .)
    PLUSPLUS        reduce using rule 89 (Operand -> IDENTIFIER .)
    MINUSMINUS      reduce using rule 89 (Operand -> IDENTIFIER .)
    EMPTY           reduce using rule 89 (Operand -> IDENTIFIER .)
    PLUSEQUAL       reduce using rule 89 (Operand -> IDENTIFIER .)
    MINUSEQUAL      reduce using rule 89 (Operand -> IDENTIFIER .)
    MULTEQUAL       reduce using rule 89 (Operand -> IDENTIFIER .)
    DIVEQUAL        reduce using rule 89 (Operand -> IDENTIFIER .)
    MODEQUAL        reduce using rule 89 (Operand -> IDENTIFIER .)


state 77

    (3) statement -> declaration statementTop .

    $end            reduce using rule 3 (statement -> declaration statementTop .)
    END             reduce using rule 3 (statement -> declaration statementTop .)
    READ            reduce using rule 3 (statement -> declaration statementTop .)
    PRINT           reduce using rule 3 (statement -> declaration statementTop .)
    IF              reduce using rule 3 (statement -> declaration statementTop .)
    BAR             reduce using rule 3 (statement -> declaration statementTop .)
    WHILE           reduce using rule 3 (statement -> declaration statementTop .)
    for             reduce using rule 3 (statement -> declaration statementTop .)
    TC_INT          reduce using rule 3 (statement -> declaration statementTop .)
    TC_FLOAT        reduce using rule 3 (statement -> declaration statementTop .)
    IDENTIFIER      reduce using rule 3 (statement -> declaration statementTop .)
    RETURN          reduce using rule 3 (statement -> declaration statementTop .)
    LESSTHAN        reduce using rule 3 (statement -> declaration statementTop .)
    LBRACK          reduce using rule 3 (statement -> declaration statementTop .)
    LPAREN          reduce using rule 3 (statement -> declaration statementTop .)
    INT             reduce using rule 3 (statement -> declaration statementTop .)
    BOOLEAN         reduce using rule 3 (statement -> declaration statementTop .)
    FLOAT           reduce using rule 3 (statement -> declaration statementTop .)


state 78

    (8) statement -> ForLoop statementTop .

    $end            reduce using rule 8 (statement -> ForLoop statementTop .)
    END             reduce using rule 8 (statement -> ForLoop statementTop .)
    READ            reduce using rule 8 (statement -> ForLoop statementTop .)
    PRINT           reduce using rule 8 (statement -> ForLoop statementTop .)
    IF              reduce using rule 8 (statement -> ForLoop statementTop .)
    BAR             reduce using rule 8 (statement -> ForLoop statementTop .)
    WHILE           reduce using rule 8 (statement -> ForLoop statementTop .)
    for             reduce using rule 8 (statement -> ForLoop statementTop .)
    TC_INT          reduce using rule 8 (statement -> ForLoop statementTop .)
    TC_FLOAT        reduce using rule 8 (statement -> ForLoop statementTop .)
    IDENTIFIER      reduce using rule 8 (statement -> ForLoop statementTop .)
    RETURN          reduce using rule 8 (statement -> ForLoop statementTop .)
    LESSTHAN        reduce using rule 8 (statement -> ForLoop statementTop .)
    LBRACK          reduce using rule 8 (statement -> ForLoop statementTop .)
    LPAREN          reduce using rule 8 (statement -> ForLoop statementTop .)
    INT             reduce using rule 8 (statement -> ForLoop statementTop .)
    BOOLEAN         reduce using rule 8 (statement -> ForLoop statementTop .)
    FLOAT           reduce using rule 8 (statement -> ForLoop statementTop .)


state 79

    (80) IfThenElse -> IF Condition . Body addElif
    (72) Body -> . statementMore
    (73) statementMore -> . statementMoreCont
    (74) statementMore -> . END
    (75) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 145
    READ            shift and go to state 141
    PRINT           shift and go to state 137
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    returnDec                      shift and go to state 135
    listDec                        shift and go to state 6
    statementMoreCont              shift and go to state 136
    typecastToFloat                shift and go to state 138
    Body                           shift and go to state 139
    IfThenElse                     shift and go to state 140
    AssignmentHead                 shift and go to state 142
    typeCastToInt                  shift and go to state 143
    FunctionDefinition             shift and go to state 144
    listEval                       shift and go to state 17
    statementMore                  shift and go to state 146
    statement1                     shift and go to state 147
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 148
    ForLoop                        shift and go to state 149
    WhileLoop                      shift and go to state 150
    stringOpStatement              shift and go to state 151
    list                           shift and go to state 34
    listOPStatement                shift and go to state 152
    FunctionCall                   shift and go to state 153
    expression                     shift and go to state 154

state 80

    (7) statement -> WhileLoop statementTop .

    $end            reduce using rule 7 (statement -> WhileLoop statementTop .)
    END             reduce using rule 7 (statement -> WhileLoop statementTop .)
    READ            reduce using rule 7 (statement -> WhileLoop statementTop .)
    PRINT           reduce using rule 7 (statement -> WhileLoop statementTop .)
    IF              reduce using rule 7 (statement -> WhileLoop statementTop .)
    BAR             reduce using rule 7 (statement -> WhileLoop statementTop .)
    WHILE           reduce using rule 7 (statement -> WhileLoop statementTop .)
    for             reduce using rule 7 (statement -> WhileLoop statementTop .)
    TC_INT          reduce using rule 7 (statement -> WhileLoop statementTop .)
    TC_FLOAT        reduce using rule 7 (statement -> WhileLoop statementTop .)
    IDENTIFIER      reduce using rule 7 (statement -> WhileLoop statementTop .)
    RETURN          reduce using rule 7 (statement -> WhileLoop statementTop .)
    LESSTHAN        reduce using rule 7 (statement -> WhileLoop statementTop .)
    LBRACK          reduce using rule 7 (statement -> WhileLoop statementTop .)
    LPAREN          reduce using rule 7 (statement -> WhileLoop statementTop .)
    INT             reduce using rule 7 (statement -> WhileLoop statementTop .)
    BOOLEAN         reduce using rule 7 (statement -> WhileLoop statementTop .)
    FLOAT           reduce using rule 7 (statement -> WhileLoop statementTop .)


state 81

    (14) statement -> stringOpStatement statementTop .

    $end            reduce using rule 14 (statement -> stringOpStatement statementTop .)
    END             reduce using rule 14 (statement -> stringOpStatement statementTop .)
    READ            reduce using rule 14 (statement -> stringOpStatement statementTop .)
    PRINT           reduce using rule 14 (statement -> stringOpStatement statementTop .)
    IF              reduce using rule 14 (statement -> stringOpStatement statementTop .)
    BAR             reduce using rule 14 (statement -> stringOpStatement statementTop .)
    WHILE           reduce using rule 14 (statement -> stringOpStatement statementTop .)
    for             reduce using rule 14 (statement -> stringOpStatement statementTop .)
    TC_INT          reduce using rule 14 (statement -> stringOpStatement statementTop .)
    TC_FLOAT        reduce using rule 14 (statement -> stringOpStatement statementTop .)
    IDENTIFIER      reduce using rule 14 (statement -> stringOpStatement statementTop .)
    RETURN          reduce using rule 14 (statement -> stringOpStatement statementTop .)
    LESSTHAN        reduce using rule 14 (statement -> stringOpStatement statementTop .)
    LBRACK          reduce using rule 14 (statement -> stringOpStatement statementTop .)
    LPAREN          reduce using rule 14 (statement -> stringOpStatement statementTop .)
    INT             reduce using rule 14 (statement -> stringOpStatement statementTop .)
    BOOLEAN         reduce using rule 14 (statement -> stringOpStatement statementTop .)
    FLOAT           reduce using rule 14 (statement -> stringOpStatement statementTop .)


state 82

    (76) ForLoop -> for LPAREN . AssignmentHead Condition Increment RPAREN Body
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON

    BAR             shift and go to state 156

    AssignmentHead                 shift and go to state 155

state 83

    (70) typecastToFloat -> TC_FLOAT IDENTIFIER . SEMICOLON

    SEMICOLON       shift and go to state 157


state 84

    (65) validListUnionValues -> FLOATVALUE .

    COMMA           reduce using rule 65 (validListUnionValues -> FLOATVALUE .)
    RBRACK          reduce using rule 65 (validListUnionValues -> FLOATVALUE .)
    RPAREN          reduce using rule 65 (validListUnionValues -> FLOATVALUE .)


state 85

    (64) validListUnionValues -> CONSTANT .

    COMMA           reduce using rule 64 (validListUnionValues -> CONSTANT .)
    RBRACK          reduce using rule 64 (validListUnionValues -> CONSTANT .)
    RPAREN          reduce using rule 64 (validListUnionValues -> CONSTANT .)


state 86

    (60) listElem -> validListUnionValues .
    (61) listElem -> validListUnionValues . COMMA listElem

    RBRACK          reduce using rule 60 (listElem -> validListUnionValues .)
    COMMA           shift and go to state 158


state 87

    (67) validListUnionValues -> STRINGVALUE .

    COMMA           reduce using rule 67 (validListUnionValues -> STRINGVALUE .)
    RBRACK          reduce using rule 67 (validListUnionValues -> STRINGVALUE .)
    RPAREN          reduce using rule 67 (validListUnionValues -> STRINGVALUE .)


state 88

    (59) list -> LBRACK listElem . RBRACK

    RBRACK          shift and go to state 159


state 89

    (68) validListUnionValues -> LISTVALUE .

    COMMA           reduce using rule 68 (validListUnionValues -> LISTVALUE .)
    RBRACK          reduce using rule 68 (validListUnionValues -> LISTVALUE .)
    RPAREN          reduce using rule 68 (validListUnionValues -> LISTVALUE .)


state 90

    (66) validListUnionValues -> booleanValue .

    COMMA           reduce using rule 66 (validListUnionValues -> booleanValue .)
    RBRACK          reduce using rule 66 (validListUnionValues -> booleanValue .)
    RPAREN          reduce using rule 66 (validListUnionValues -> booleanValue .)


state 91

    (62) listElem -> EMPTY .

    RBRACK          reduce using rule 62 (listElem -> EMPTY .)


state 92

    (119) ArithmeticExpression -> LESSTHAN CONSTANT . GREATERTHAN
    (90) Operand -> CONSTANT .

    GREATERTHAN     shift and go to state 160
    PLUS            reduce using rule 90 (Operand -> CONSTANT .)
    MINUS           reduce using rule 90 (Operand -> CONSTANT .)
    MULT            reduce using rule 90 (Operand -> CONSTANT .)
    DIV             reduce using rule 90 (Operand -> CONSTANT .)
    MOD             reduce using rule 90 (Operand -> CONSTANT .)


state 93

    (118) ArithmeticExpression -> LESSTHAN Operand . ArithmeticOperator Operand GREATERTHAN
    (120) ArithmeticOperator -> . PLUS
    (121) ArithmeticOperator -> . MINUS
    (122) ArithmeticOperator -> . MULT
    (123) ArithmeticOperator -> . DIV
    (124) ArithmeticOperator -> . MOD

    PLUS            shift and go to state 161
    MINUS           shift and go to state 164
    MULT            shift and go to state 165
    DIV             shift and go to state 163
    MOD             shift and go to state 166

    ArithmeticOperator             shift and go to state 162

state 94

    (15) statement -> listOPStatement statementTop .

    $end            reduce using rule 15 (statement -> listOPStatement statementTop .)
    END             reduce using rule 15 (statement -> listOPStatement statementTop .)
    READ            reduce using rule 15 (statement -> listOPStatement statementTop .)
    PRINT           reduce using rule 15 (statement -> listOPStatement statementTop .)
    IF              reduce using rule 15 (statement -> listOPStatement statementTop .)
    BAR             reduce using rule 15 (statement -> listOPStatement statementTop .)
    WHILE           reduce using rule 15 (statement -> listOPStatement statementTop .)
    for             reduce using rule 15 (statement -> listOPStatement statementTop .)
    TC_INT          reduce using rule 15 (statement -> listOPStatement statementTop .)
    TC_FLOAT        reduce using rule 15 (statement -> listOPStatement statementTop .)
    IDENTIFIER      reduce using rule 15 (statement -> listOPStatement statementTop .)
    RETURN          reduce using rule 15 (statement -> listOPStatement statementTop .)
    LESSTHAN        reduce using rule 15 (statement -> listOPStatement statementTop .)
    LBRACK          reduce using rule 15 (statement -> listOPStatement statementTop .)
    LPAREN          reduce using rule 15 (statement -> listOPStatement statementTop .)
    INT             reduce using rule 15 (statement -> listOPStatement statementTop .)
    BOOLEAN         reduce using rule 15 (statement -> listOPStatement statementTop .)
    FLOAT           reduce using rule 15 (statement -> listOPStatement statementTop .)


state 95

    (12) statement -> FunctionCall statementTop .

    $end            reduce using rule 12 (statement -> FunctionCall statementTop .)
    END             reduce using rule 12 (statement -> FunctionCall statementTop .)
    READ            reduce using rule 12 (statement -> FunctionCall statementTop .)
    PRINT           reduce using rule 12 (statement -> FunctionCall statementTop .)
    IF              reduce using rule 12 (statement -> FunctionCall statementTop .)
    BAR             reduce using rule 12 (statement -> FunctionCall statementTop .)
    WHILE           reduce using rule 12 (statement -> FunctionCall statementTop .)
    for             reduce using rule 12 (statement -> FunctionCall statementTop .)
    TC_INT          reduce using rule 12 (statement -> FunctionCall statementTop .)
    TC_FLOAT        reduce using rule 12 (statement -> FunctionCall statementTop .)
    IDENTIFIER      reduce using rule 12 (statement -> FunctionCall statementTop .)
    RETURN          reduce using rule 12 (statement -> FunctionCall statementTop .)
    LESSTHAN        reduce using rule 12 (statement -> FunctionCall statementTop .)
    LBRACK          reduce using rule 12 (statement -> FunctionCall statementTop .)
    LPAREN          reduce using rule 12 (statement -> FunctionCall statementTop .)
    INT             reduce using rule 12 (statement -> FunctionCall statementTop .)
    BOOLEAN         reduce using rule 12 (statement -> FunctionCall statementTop .)
    FLOAT           reduce using rule 12 (statement -> FunctionCall statementTop .)


state 96

    (4) statement -> expression statementTop .

    $end            reduce using rule 4 (statement -> expression statementTop .)
    END             reduce using rule 4 (statement -> expression statementTop .)
    READ            reduce using rule 4 (statement -> expression statementTop .)
    PRINT           reduce using rule 4 (statement -> expression statementTop .)
    IF              reduce using rule 4 (statement -> expression statementTop .)
    BAR             reduce using rule 4 (statement -> expression statementTop .)
    WHILE           reduce using rule 4 (statement -> expression statementTop .)
    for             reduce using rule 4 (statement -> expression statementTop .)
    TC_INT          reduce using rule 4 (statement -> expression statementTop .)
    TC_FLOAT        reduce using rule 4 (statement -> expression statementTop .)
    IDENTIFIER      reduce using rule 4 (statement -> expression statementTop .)
    RETURN          reduce using rule 4 (statement -> expression statementTop .)
    LESSTHAN        reduce using rule 4 (statement -> expression statementTop .)
    LBRACK          reduce using rule 4 (statement -> expression statementTop .)
    LPAREN          reduce using rule 4 (statement -> expression statementTop .)
    INT             reduce using rule 4 (statement -> expression statementTop .)
    BOOLEAN         reduce using rule 4 (statement -> expression statementTop .)
    FLOAT           reduce using rule 4 (statement -> expression statementTop .)


state 97

    (41) identifierDeclaration -> BAR dataType IDENTIFIER . BAR SEMICOLON
    (42) identifierDeclaration -> BAR dataType IDENTIFIER . LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType IDENTIFIER . LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> BAR dataType IDENTIFIER . EQUAL expression BAR SEMICOLON

    BAR             shift and go to state 169
    LBRACK          shift and go to state 167
    EQUAL           shift and go to state 168


state 98

    (111) AssignmentOperator -> DIVEQUAL .

    IDENTIFIER      reduce using rule 111 (AssignmentOperator -> DIVEQUAL .)
    CONSTANT        reduce using rule 111 (AssignmentOperator -> DIVEQUAL .)
    FLOATVALUE      reduce using rule 111 (AssignmentOperator -> DIVEQUAL .)
    LISTVALUE       reduce using rule 111 (AssignmentOperator -> DIVEQUAL .)
    TRUE            reduce using rule 111 (AssignmentOperator -> DIVEQUAL .)
    FALSE           reduce using rule 111 (AssignmentOperator -> DIVEQUAL .)
    LESSTHAN        reduce using rule 111 (AssignmentOperator -> DIVEQUAL .)


state 99

    (108) AssignmentOperator -> PLUSEQUAL .

    IDENTIFIER      reduce using rule 108 (AssignmentOperator -> PLUSEQUAL .)
    CONSTANT        reduce using rule 108 (AssignmentOperator -> PLUSEQUAL .)
    FLOATVALUE      reduce using rule 108 (AssignmentOperator -> PLUSEQUAL .)
    LISTVALUE       reduce using rule 108 (AssignmentOperator -> PLUSEQUAL .)
    TRUE            reduce using rule 108 (AssignmentOperator -> PLUSEQUAL .)
    FALSE           reduce using rule 108 (AssignmentOperator -> PLUSEQUAL .)
    LESSTHAN        reduce using rule 108 (AssignmentOperator -> PLUSEQUAL .)


state 100

    (99) AssignmentHead -> BAR IDENTIFIER AssignmentOption . BAR SEMICOLON

    BAR             shift and go to state 170


state 101

    (101) AssignmentOption -> AssignmentOperator . AssignmentOptions2
    (102) AssignmentOptions2 -> . CONSTANT
    (103) AssignmentOptions2 -> . ArithmeticExpression
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN

    CONSTANT        shift and go to state 171
    LESSTHAN        shift and go to state 36

    ArithmeticExpression           shift and go to state 172
    AssignmentOptions2             shift and go to state 173

state 102

    (109) AssignmentOperator -> MINUSEQUAL .

    IDENTIFIER      reduce using rule 109 (AssignmentOperator -> MINUSEQUAL .)
    CONSTANT        reduce using rule 109 (AssignmentOperator -> MINUSEQUAL .)
    FLOATVALUE      reduce using rule 109 (AssignmentOperator -> MINUSEQUAL .)
    LISTVALUE       reduce using rule 109 (AssignmentOperator -> MINUSEQUAL .)
    TRUE            reduce using rule 109 (AssignmentOperator -> MINUSEQUAL .)
    FALSE           reduce using rule 109 (AssignmentOperator -> MINUSEQUAL .)
    LESSTHAN        reduce using rule 109 (AssignmentOperator -> MINUSEQUAL .)


state 103

    (58) listDec -> BAR IDENTIFIER EQUAL . list BAR SEMICOLON
    (100) AssignmentOption -> EQUAL . AssignmentOptionChain
    (59) list -> . LBRACK listElem RBRACK
    (104) AssignmentOptionChain -> . listEval
    (105) AssignmentOptionChain -> . IDENTIFIER
    (106) AssignmentOptionChain -> . Function
    (107) AssignmentOptionChain -> . AssignmentOptions2
    (63) listEval -> . IDENTIFIER LISTVALUE
    (133) Function -> . IDENTIFIER LPAREN Parameter RPAREN
    (102) AssignmentOptions2 -> . CONSTANT
    (103) AssignmentOptions2 -> . ArithmeticExpression
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN

    LBRACK          shift and go to state 35
    IDENTIFIER      shift and go to state 175
    CONSTANT        shift and go to state 171
    LESSTHAN        shift and go to state 36

    Function                       shift and go to state 174
    listEval                       shift and go to state 176
    list                           shift and go to state 178
    AssignmentOptionChain          shift and go to state 179
    AssignmentOptions2             shift and go to state 177
    ArithmeticExpression           shift and go to state 172

state 104

    (110) AssignmentOperator -> MULTEQUAL .

    IDENTIFIER      reduce using rule 110 (AssignmentOperator -> MULTEQUAL .)
    CONSTANT        reduce using rule 110 (AssignmentOperator -> MULTEQUAL .)
    FLOATVALUE      reduce using rule 110 (AssignmentOperator -> MULTEQUAL .)
    LISTVALUE       reduce using rule 110 (AssignmentOperator -> MULTEQUAL .)
    TRUE            reduce using rule 110 (AssignmentOperator -> MULTEQUAL .)
    FALSE           reduce using rule 110 (AssignmentOperator -> MULTEQUAL .)
    LESSTHAN        reduce using rule 110 (AssignmentOperator -> MULTEQUAL .)


state 105

    (112) AssignmentOperator -> MODEQUAL .

    IDENTIFIER      reduce using rule 112 (AssignmentOperator -> MODEQUAL .)
    CONSTANT        reduce using rule 112 (AssignmentOperator -> MODEQUAL .)
    FLOATVALUE      reduce using rule 112 (AssignmentOperator -> MODEQUAL .)
    LISTVALUE       reduce using rule 112 (AssignmentOperator -> MODEQUAL .)
    TRUE            reduce using rule 112 (AssignmentOperator -> MODEQUAL .)
    FALSE           reduce using rule 112 (AssignmentOperator -> MODEQUAL .)
    LESSTHAN        reduce using rule 112 (AssignmentOperator -> MODEQUAL .)


state 106

    (16) statement -> READ LPAREN IDENTIFIER . RPAREN SEMICOLON statementTop

    RPAREN          shift and go to state 180


state 107

    (88) Condition -> LPAREN NOT . Condition RPAREN
    (86) Condition -> . RelationExpression
    (87) Condition -> . LPAREN Condition Compound Condition RPAREN
    (88) Condition -> . LPAREN NOT Condition RPAREN
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 45

    RelationExpression             shift and go to state 44
    Condition                      shift and go to state 181

state 108

    (87) Condition -> LPAREN Condition . Compound Condition RPAREN
    (94) Compound -> . AND
    (95) Compound -> . OR

    AND             shift and go to state 182
    OR              shift and go to state 184

    Compound                       shift and go to state 183

state 109

    (71) WhileLoop -> WHILE Condition COLON . Body
    (72) Body -> . statementMore
    (73) statementMore -> . statementMoreCont
    (74) statementMore -> . END
    (75) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 145
    READ            shift and go to state 141
    PRINT           shift and go to state 137
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    returnDec                      shift and go to state 135
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 138
    Body                           shift and go to state 185
    IfThenElse                     shift and go to state 140
    AssignmentHead                 shift and go to state 142
    typeCastToInt                  shift and go to state 143
    statementMoreCont              shift and go to state 136
    FunctionDefinition             shift and go to state 144
    listEval                       shift and go to state 17
    statementMore                  shift and go to state 146
    statement1                     shift and go to state 147
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 148
    ForLoop                        shift and go to state 149
    WhileLoop                      shift and go to state 150
    stringOpStatement              shift and go to state 151
    list                           shift and go to state 34
    listOPStatement                shift and go to state 152
    FunctionCall                   shift and go to state 153
    expression                     shift and go to state 154

state 110

    (38) toPrint -> IDENTIFIER .

    PLUS            reduce using rule 38 (toPrint -> IDENTIFIER .)
    EMPTY           reduce using rule 38 (toPrint -> IDENTIFIER .)


state 111

    (17) statement -> PRINT LPAREN content . RPAREN SEMICOLON statementTop

    RPAREN          shift and go to state 186


state 112

    (37) toPrint -> CONSTANT .

    PLUS            reduce using rule 37 (toPrint -> CONSTANT .)
    EMPTY           reduce using rule 37 (toPrint -> CONSTANT .)


state 113

    (36) toPrint -> STRINGVALUE .

    PLUS            reduce using rule 36 (toPrint -> STRINGVALUE .)
    EMPTY           reduce using rule 36 (toPrint -> STRINGVALUE .)


state 114

    (33) content -> toPrint . morePrint
    (34) morePrint -> . PLUS toPrint morePrint
    (35) morePrint -> . EMPTY

    PLUS            shift and go to state 187
    EMPTY           shift and go to state 189

    morePrint                      shift and go to state 188

state 115

    (141) returnDec -> RETURN CONSTANT SEMICOLON .

    END             reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    READ            reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    PRINT           reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    IF              reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    BAR             reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    WHILE           reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    for             reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    TC_INT          reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    TC_FLOAT        reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    IDENTIFIER      reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    RETURN          reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LESSTHAN        reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LBRACK          reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    LPAREN          reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    INT             reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    BOOLEAN         reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)
    FLOAT           reduce using rule 141 (returnDec -> RETURN CONSTANT SEMICOLON .)


state 116

    (142) returnDec -> RETURN IDENTIFIER SEMICOLON .

    END             reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    READ            reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    IF              reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    BAR             reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    for             reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    TC_INT          reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    TC_FLOAT        reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LESSTHAN        reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LBRACK          reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    INT             reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 142 (returnDec -> RETURN IDENTIFIER SEMICOLON .)


state 117

    (143) returnDec -> RETURN expression SEMICOLON .

    END             reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    READ            reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    PRINT           reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    IF              reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    BAR             reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    WHILE           reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    for             reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    TC_INT          reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    TC_FLOAT        reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    IDENTIFIER      reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    RETURN          reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    LESSTHAN        reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    LBRACK          reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    LPAREN          reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    INT             reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    BOOLEAN         reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)
    FLOAT           reduce using rule 143 (returnDec -> RETURN expression SEMICOLON .)


state 118

    (69) typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .

    END             reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    READ            reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    IF              reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    BAR             reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    for             reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    TC_INT          reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    TC_FLOAT        reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LESSTHAN        reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LBRACK          reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    INT             reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 69 (typeCastToInt -> TC_INT IDENTIFIER SEMICOLON .)


state 119

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN . CONSTANT COMMA validListUnionValues RPAREN SEMICOLON

    CONSTANT        shift and go to state 190


state 120

    (48) stringOpStatement -> IDENTIFIER stringOp LPAREN . STRING RPAREN SEMICOLON
    (49) stringOpStatement -> IDENTIFIER stringOp LPAREN . IDENTIFIER RPAREN SEMICOLON

    STRING          shift and go to state 191
    IDENTIFIER      shift and go to state 192


state 121

    (51) listOPStatement -> IDENTIFIER POP LPAREN . listOpChoice RPAREN SEMICOLON
    (52) listOpChoice -> . CONSTANT
    (53) listOpChoice -> . EMPTY

    CONSTANT        shift and go to state 194
    EMPTY           shift and go to state 195

    listOpChoice                   shift and go to state 193

state 122

    (137) FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter . RPAREN SEMICOLON

    RPAREN          shift and go to state 196


state 123

    (138) FunctionCallParameter -> IDENTIFIER .
    (139) FunctionCallParameter -> IDENTIFIER . COMMA FunctionCallParameter

    RPAREN          reduce using rule 138 (FunctionCallParameter -> IDENTIFIER .)
    COMMA           shift and go to state 197


state 124

    (140) FunctionCallParameter -> EMPTY .

    RPAREN          reduce using rule 140 (FunctionCallParameter -> EMPTY .)


state 125

    (132) FunctionDefinition -> dataType Function COLON . Body
    (72) Body -> . statementMore
    (73) statementMore -> . statementMoreCont
    (74) statementMore -> . END
    (75) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 145
    READ            shift and go to state 141
    PRINT           shift and go to state 137
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    returnDec                      shift and go to state 135
    FunctionDefinition             shift and go to state 144
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 138
    IfThenElse                     shift and go to state 140
    AssignmentHead                 shift and go to state 142
    typeCastToInt                  shift and go to state 143
    Body                           shift and go to state 198
    listEval                       shift and go to state 17
    statementMore                  shift and go to state 146
    statement1                     shift and go to state 147
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 148
    statementMoreCont              shift and go to state 136
    ForLoop                        shift and go to state 149
    stringOpStatement              shift and go to state 151
    list                           shift and go to state 34
    listOPStatement                shift and go to state 152
    FunctionCall                   shift and go to state 153
    WhileLoop                      shift and go to state 150
    expression                     shift and go to state 154

state 126

    (133) Function -> IDENTIFIER LPAREN . Parameter RPAREN
    (134) Parameter -> . dataType IDENTIFIER
    (135) Parameter -> . dataType IDENTIFIER COMMA Parameter
    (136) Parameter -> . EMPTY
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    EMPTY           shift and go to state 201
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    dataType                       shift and go to state 199
    Parameter                      shift and go to state 200

state 127

    (131) RelationOperator -> NOTEQ .

    IDENTIFIER      reduce using rule 131 (RelationOperator -> NOTEQ .)
    CONSTANT        reduce using rule 131 (RelationOperator -> NOTEQ .)
    FLOATVALUE      reduce using rule 131 (RelationOperator -> NOTEQ .)
    LISTVALUE       reduce using rule 131 (RelationOperator -> NOTEQ .)
    TRUE            reduce using rule 131 (RelationOperator -> NOTEQ .)
    FALSE           reduce using rule 131 (RelationOperator -> NOTEQ .)


state 128

    (130) RelationOperator -> LESSEREQ .

    IDENTIFIER      reduce using rule 130 (RelationOperator -> LESSEREQ .)
    CONSTANT        reduce using rule 130 (RelationOperator -> LESSEREQ .)
    FLOATVALUE      reduce using rule 130 (RelationOperator -> LESSEREQ .)
    LISTVALUE       reduce using rule 130 (RelationOperator -> LESSEREQ .)
    TRUE            reduce using rule 130 (RelationOperator -> LESSEREQ .)
    FALSE           reduce using rule 130 (RelationOperator -> LESSEREQ .)


state 129

    (126) RelationOperator -> EQUAL .

    IDENTIFIER      reduce using rule 126 (RelationOperator -> EQUAL .)
    CONSTANT        reduce using rule 126 (RelationOperator -> EQUAL .)
    FLOATVALUE      reduce using rule 126 (RelationOperator -> EQUAL .)
    LISTVALUE       reduce using rule 126 (RelationOperator -> EQUAL .)
    TRUE            reduce using rule 126 (RelationOperator -> EQUAL .)
    FALSE           reduce using rule 126 (RelationOperator -> EQUAL .)


state 130

    (129) RelationOperator -> GREATEREQ .

    IDENTIFIER      reduce using rule 129 (RelationOperator -> GREATEREQ .)
    CONSTANT        reduce using rule 129 (RelationOperator -> GREATEREQ .)
    FLOATVALUE      reduce using rule 129 (RelationOperator -> GREATEREQ .)
    LISTVALUE       reduce using rule 129 (RelationOperator -> GREATEREQ .)
    TRUE            reduce using rule 129 (RelationOperator -> GREATEREQ .)
    FALSE           reduce using rule 129 (RelationOperator -> GREATEREQ .)


state 131

    (127) RelationOperator -> LESSTHAN .

    IDENTIFIER      reduce using rule 127 (RelationOperator -> LESSTHAN .)
    CONSTANT        reduce using rule 127 (RelationOperator -> LESSTHAN .)
    FLOATVALUE      reduce using rule 127 (RelationOperator -> LESSTHAN .)
    LISTVALUE       reduce using rule 127 (RelationOperator -> LESSTHAN .)
    TRUE            reduce using rule 127 (RelationOperator -> LESSTHAN .)
    FALSE           reduce using rule 127 (RelationOperator -> LESSTHAN .)


state 132

    (128) RelationOperator -> GREATERTHAN .

    IDENTIFIER      reduce using rule 128 (RelationOperator -> GREATERTHAN .)
    CONSTANT        reduce using rule 128 (RelationOperator -> GREATERTHAN .)
    FLOATVALUE      reduce using rule 128 (RelationOperator -> GREATERTHAN .)
    LISTVALUE       reduce using rule 128 (RelationOperator -> GREATERTHAN .)
    TRUE            reduce using rule 128 (RelationOperator -> GREATERTHAN .)
    FALSE           reduce using rule 128 (RelationOperator -> GREATERTHAN .)


state 133

    (125) RelationOperator -> EQUALEQUAL .

    IDENTIFIER      reduce using rule 125 (RelationOperator -> EQUALEQUAL .)
    CONSTANT        reduce using rule 125 (RelationOperator -> EQUALEQUAL .)
    FLOATVALUE      reduce using rule 125 (RelationOperator -> EQUALEQUAL .)
    LISTVALUE       reduce using rule 125 (RelationOperator -> EQUALEQUAL .)
    TRUE            reduce using rule 125 (RelationOperator -> EQUALEQUAL .)
    FALSE           reduce using rule 125 (RelationOperator -> EQUALEQUAL .)


state 134

    (117) RelationExpression -> LPAREN Operand RelationOperator . Operand RPAREN
    (89) Operand -> . IDENTIFIER
    (90) Operand -> . CONSTANT
    (91) Operand -> . booleanValue
    (92) Operand -> . FLOATVALUE
    (93) Operand -> . LISTVALUE
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 76
    CONSTANT        shift and go to state 74
    FLOATVALUE      shift and go to state 71
    LISTVALUE       shift and go to state 75
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    Operand                        shift and go to state 202
    booleanValue                   shift and go to state 69

state 135

    (28) statement1 -> returnDec .

    END             reduce using rule 28 (statement1 -> returnDec .)
    READ            reduce using rule 28 (statement1 -> returnDec .)
    PRINT           reduce using rule 28 (statement1 -> returnDec .)
    IF              reduce using rule 28 (statement1 -> returnDec .)
    BAR             reduce using rule 28 (statement1 -> returnDec .)
    WHILE           reduce using rule 28 (statement1 -> returnDec .)
    for             reduce using rule 28 (statement1 -> returnDec .)
    TC_INT          reduce using rule 28 (statement1 -> returnDec .)
    TC_FLOAT        reduce using rule 28 (statement1 -> returnDec .)
    IDENTIFIER      reduce using rule 28 (statement1 -> returnDec .)
    RETURN          reduce using rule 28 (statement1 -> returnDec .)
    LESSTHAN        reduce using rule 28 (statement1 -> returnDec .)
    LBRACK          reduce using rule 28 (statement1 -> returnDec .)
    LPAREN          reduce using rule 28 (statement1 -> returnDec .)
    INT             reduce using rule 28 (statement1 -> returnDec .)
    BOOLEAN         reduce using rule 28 (statement1 -> returnDec .)
    FLOAT           reduce using rule 28 (statement1 -> returnDec .)


state 136

    (73) statementMore -> statementMoreCont .

    END             reduce using rule 73 (statementMore -> statementMoreCont .)
    READ            reduce using rule 73 (statementMore -> statementMoreCont .)
    PRINT           reduce using rule 73 (statementMore -> statementMoreCont .)
    IF              reduce using rule 73 (statementMore -> statementMoreCont .)
    BAR             reduce using rule 73 (statementMore -> statementMoreCont .)
    WHILE           reduce using rule 73 (statementMore -> statementMoreCont .)
    for             reduce using rule 73 (statementMore -> statementMoreCont .)
    TC_INT          reduce using rule 73 (statementMore -> statementMoreCont .)
    TC_FLOAT        reduce using rule 73 (statementMore -> statementMoreCont .)
    IDENTIFIER      reduce using rule 73 (statementMore -> statementMoreCont .)
    RETURN          reduce using rule 73 (statementMore -> statementMoreCont .)
    LESSTHAN        reduce using rule 73 (statementMore -> statementMoreCont .)
    LBRACK          reduce using rule 73 (statementMore -> statementMoreCont .)
    LPAREN          reduce using rule 73 (statementMore -> statementMoreCont .)
    INT             reduce using rule 73 (statementMore -> statementMoreCont .)
    BOOLEAN         reduce using rule 73 (statementMore -> statementMoreCont .)
    FLOAT           reduce using rule 73 (statementMore -> statementMoreCont .)
    FI              reduce using rule 73 (statementMore -> statementMoreCont .)
    ELSE            reduce using rule 73 (statementMore -> statementMoreCont .)
    ELIF            reduce using rule 73 (statementMore -> statementMoreCont .)


state 137

    (32) statement1 -> PRINT . LPAREN content RPAREN SEMICOLON

    LPAREN          shift and go to state 203


state 138

    (25) statement1 -> typecastToFloat .

    END             reduce using rule 25 (statement1 -> typecastToFloat .)
    READ            reduce using rule 25 (statement1 -> typecastToFloat .)
    PRINT           reduce using rule 25 (statement1 -> typecastToFloat .)
    IF              reduce using rule 25 (statement1 -> typecastToFloat .)
    BAR             reduce using rule 25 (statement1 -> typecastToFloat .)
    WHILE           reduce using rule 25 (statement1 -> typecastToFloat .)
    for             reduce using rule 25 (statement1 -> typecastToFloat .)
    TC_INT          reduce using rule 25 (statement1 -> typecastToFloat .)
    TC_FLOAT        reduce using rule 25 (statement1 -> typecastToFloat .)
    IDENTIFIER      reduce using rule 25 (statement1 -> typecastToFloat .)
    RETURN          reduce using rule 25 (statement1 -> typecastToFloat .)
    LESSTHAN        reduce using rule 25 (statement1 -> typecastToFloat .)
    LBRACK          reduce using rule 25 (statement1 -> typecastToFloat .)
    LPAREN          reduce using rule 25 (statement1 -> typecastToFloat .)
    INT             reduce using rule 25 (statement1 -> typecastToFloat .)
    BOOLEAN         reduce using rule 25 (statement1 -> typecastToFloat .)
    FLOAT           reduce using rule 25 (statement1 -> typecastToFloat .)


state 139

    (80) IfThenElse -> IF Condition Body . addElif
    (81) addElif -> . addElif2
    (82) addElif -> . FI
    (83) addElif -> . ELSE Body
    (84) addElif2 -> . elifClause addElif
    (85) elifClause -> . ELIF Condition Body

    FI              shift and go to state 208
    ELSE            shift and go to state 206
    ELIF            shift and go to state 204

    addElif                        shift and go to state 205
    elifClause                     shift and go to state 209
    addElif2                       shift and go to state 207

state 140

    (20) statement1 -> IfThenElse .

    END             reduce using rule 20 (statement1 -> IfThenElse .)
    READ            reduce using rule 20 (statement1 -> IfThenElse .)
    PRINT           reduce using rule 20 (statement1 -> IfThenElse .)
    IF              reduce using rule 20 (statement1 -> IfThenElse .)
    BAR             reduce using rule 20 (statement1 -> IfThenElse .)
    WHILE           reduce using rule 20 (statement1 -> IfThenElse .)
    for             reduce using rule 20 (statement1 -> IfThenElse .)
    TC_INT          reduce using rule 20 (statement1 -> IfThenElse .)
    TC_FLOAT        reduce using rule 20 (statement1 -> IfThenElse .)
    IDENTIFIER      reduce using rule 20 (statement1 -> IfThenElse .)
    RETURN          reduce using rule 20 (statement1 -> IfThenElse .)
    LESSTHAN        reduce using rule 20 (statement1 -> IfThenElse .)
    LBRACK          reduce using rule 20 (statement1 -> IfThenElse .)
    LPAREN          reduce using rule 20 (statement1 -> IfThenElse .)
    INT             reduce using rule 20 (statement1 -> IfThenElse .)
    BOOLEAN         reduce using rule 20 (statement1 -> IfThenElse .)
    FLOAT           reduce using rule 20 (statement1 -> IfThenElse .)


state 141

    (31) statement1 -> READ . LPAREN IDENTIFIER RPAREN SEMICOLON

    LPAREN          shift and go to state 210


state 142

    (21) statement1 -> AssignmentHead .

    END             reduce using rule 21 (statement1 -> AssignmentHead .)
    READ            reduce using rule 21 (statement1 -> AssignmentHead .)
    PRINT           reduce using rule 21 (statement1 -> AssignmentHead .)
    IF              reduce using rule 21 (statement1 -> AssignmentHead .)
    BAR             reduce using rule 21 (statement1 -> AssignmentHead .)
    WHILE           reduce using rule 21 (statement1 -> AssignmentHead .)
    for             reduce using rule 21 (statement1 -> AssignmentHead .)
    TC_INT          reduce using rule 21 (statement1 -> AssignmentHead .)
    TC_FLOAT        reduce using rule 21 (statement1 -> AssignmentHead .)
    IDENTIFIER      reduce using rule 21 (statement1 -> AssignmentHead .)
    RETURN          reduce using rule 21 (statement1 -> AssignmentHead .)
    LESSTHAN        reduce using rule 21 (statement1 -> AssignmentHead .)
    LBRACK          reduce using rule 21 (statement1 -> AssignmentHead .)
    LPAREN          reduce using rule 21 (statement1 -> AssignmentHead .)
    INT             reduce using rule 21 (statement1 -> AssignmentHead .)
    BOOLEAN         reduce using rule 21 (statement1 -> AssignmentHead .)
    FLOAT           reduce using rule 21 (statement1 -> AssignmentHead .)


state 143

    (24) statement1 -> typeCastToInt .

    END             reduce using rule 24 (statement1 -> typeCastToInt .)
    READ            reduce using rule 24 (statement1 -> typeCastToInt .)
    PRINT           reduce using rule 24 (statement1 -> typeCastToInt .)
    IF              reduce using rule 24 (statement1 -> typeCastToInt .)
    BAR             reduce using rule 24 (statement1 -> typeCastToInt .)
    WHILE           reduce using rule 24 (statement1 -> typeCastToInt .)
    for             reduce using rule 24 (statement1 -> typeCastToInt .)
    TC_INT          reduce using rule 24 (statement1 -> typeCastToInt .)
    TC_FLOAT        reduce using rule 24 (statement1 -> typeCastToInt .)
    IDENTIFIER      reduce using rule 24 (statement1 -> typeCastToInt .)
    RETURN          reduce using rule 24 (statement1 -> typeCastToInt .)
    LESSTHAN        reduce using rule 24 (statement1 -> typeCastToInt .)
    LBRACK          reduce using rule 24 (statement1 -> typeCastToInt .)
    LPAREN          reduce using rule 24 (statement1 -> typeCastToInt .)
    INT             reduce using rule 24 (statement1 -> typeCastToInt .)
    BOOLEAN         reduce using rule 24 (statement1 -> typeCastToInt .)
    FLOAT           reduce using rule 24 (statement1 -> typeCastToInt .)


state 144

    (26) statement1 -> FunctionDefinition .

    END             reduce using rule 26 (statement1 -> FunctionDefinition .)
    READ            reduce using rule 26 (statement1 -> FunctionDefinition .)
    PRINT           reduce using rule 26 (statement1 -> FunctionDefinition .)
    IF              reduce using rule 26 (statement1 -> FunctionDefinition .)
    BAR             reduce using rule 26 (statement1 -> FunctionDefinition .)
    WHILE           reduce using rule 26 (statement1 -> FunctionDefinition .)
    for             reduce using rule 26 (statement1 -> FunctionDefinition .)
    TC_INT          reduce using rule 26 (statement1 -> FunctionDefinition .)
    TC_FLOAT        reduce using rule 26 (statement1 -> FunctionDefinition .)
    IDENTIFIER      reduce using rule 26 (statement1 -> FunctionDefinition .)
    RETURN          reduce using rule 26 (statement1 -> FunctionDefinition .)
    LESSTHAN        reduce using rule 26 (statement1 -> FunctionDefinition .)
    LBRACK          reduce using rule 26 (statement1 -> FunctionDefinition .)
    LPAREN          reduce using rule 26 (statement1 -> FunctionDefinition .)
    INT             reduce using rule 26 (statement1 -> FunctionDefinition .)
    BOOLEAN         reduce using rule 26 (statement1 -> FunctionDefinition .)
    FLOAT           reduce using rule 26 (statement1 -> FunctionDefinition .)


state 145

    (74) statementMore -> END .

    END             reduce using rule 74 (statementMore -> END .)
    READ            reduce using rule 74 (statementMore -> END .)
    PRINT           reduce using rule 74 (statementMore -> END .)
    IF              reduce using rule 74 (statementMore -> END .)
    BAR             reduce using rule 74 (statementMore -> END .)
    WHILE           reduce using rule 74 (statementMore -> END .)
    for             reduce using rule 74 (statementMore -> END .)
    TC_INT          reduce using rule 74 (statementMore -> END .)
    TC_FLOAT        reduce using rule 74 (statementMore -> END .)
    IDENTIFIER      reduce using rule 74 (statementMore -> END .)
    RETURN          reduce using rule 74 (statementMore -> END .)
    LESSTHAN        reduce using rule 74 (statementMore -> END .)
    LBRACK          reduce using rule 74 (statementMore -> END .)
    LPAREN          reduce using rule 74 (statementMore -> END .)
    INT             reduce using rule 74 (statementMore -> END .)
    BOOLEAN         reduce using rule 74 (statementMore -> END .)
    FLOAT           reduce using rule 74 (statementMore -> END .)
    FI              reduce using rule 74 (statementMore -> END .)
    ELSE            reduce using rule 74 (statementMore -> END .)
    ELIF            reduce using rule 74 (statementMore -> END .)


state 146

    (72) Body -> statementMore .

    END             reduce using rule 72 (Body -> statementMore .)
    READ            reduce using rule 72 (Body -> statementMore .)
    PRINT           reduce using rule 72 (Body -> statementMore .)
    IF              reduce using rule 72 (Body -> statementMore .)
    BAR             reduce using rule 72 (Body -> statementMore .)
    WHILE           reduce using rule 72 (Body -> statementMore .)
    for             reduce using rule 72 (Body -> statementMore .)
    TC_INT          reduce using rule 72 (Body -> statementMore .)
    TC_FLOAT        reduce using rule 72 (Body -> statementMore .)
    IDENTIFIER      reduce using rule 72 (Body -> statementMore .)
    RETURN          reduce using rule 72 (Body -> statementMore .)
    LESSTHAN        reduce using rule 72 (Body -> statementMore .)
    LBRACK          reduce using rule 72 (Body -> statementMore .)
    LPAREN          reduce using rule 72 (Body -> statementMore .)
    INT             reduce using rule 72 (Body -> statementMore .)
    BOOLEAN         reduce using rule 72 (Body -> statementMore .)
    FLOAT           reduce using rule 72 (Body -> statementMore .)
    FI              reduce using rule 72 (Body -> statementMore .)
    ELSE            reduce using rule 72 (Body -> statementMore .)
    ELIF            reduce using rule 72 (Body -> statementMore .)


state 147

    (75) statementMoreCont -> statement1 . statementMore
    (73) statementMore -> . statementMoreCont
    (74) statementMore -> . END
    (75) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 145
    READ            shift and go to state 141
    PRINT           shift and go to state 137
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    returnDec                      shift and go to state 135
    FunctionDefinition             shift and go to state 144
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 138
    IfThenElse                     shift and go to state 140
    AssignmentHead                 shift and go to state 142
    typeCastToInt                  shift and go to state 143
    ForLoop                        shift and go to state 149
    listEval                       shift and go to state 17
    statementMore                  shift and go to state 211
    statement1                     shift and go to state 147
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 148
    statementMoreCont              shift and go to state 136
    WhileLoop                      shift and go to state 150
    stringOpStatement              shift and go to state 151
    list                           shift and go to state 34
    listOPStatement                shift and go to state 152
    FunctionCall                   shift and go to state 153
    expression                     shift and go to state 154

state 148

    (18) statement1 -> declaration .

    END             reduce using rule 18 (statement1 -> declaration .)
    READ            reduce using rule 18 (statement1 -> declaration .)
    PRINT           reduce using rule 18 (statement1 -> declaration .)
    IF              reduce using rule 18 (statement1 -> declaration .)
    BAR             reduce using rule 18 (statement1 -> declaration .)
    WHILE           reduce using rule 18 (statement1 -> declaration .)
    for             reduce using rule 18 (statement1 -> declaration .)
    TC_INT          reduce using rule 18 (statement1 -> declaration .)
    TC_FLOAT        reduce using rule 18 (statement1 -> declaration .)
    IDENTIFIER      reduce using rule 18 (statement1 -> declaration .)
    RETURN          reduce using rule 18 (statement1 -> declaration .)
    LESSTHAN        reduce using rule 18 (statement1 -> declaration .)
    LBRACK          reduce using rule 18 (statement1 -> declaration .)
    LPAREN          reduce using rule 18 (statement1 -> declaration .)
    INT             reduce using rule 18 (statement1 -> declaration .)
    BOOLEAN         reduce using rule 18 (statement1 -> declaration .)
    FLOAT           reduce using rule 18 (statement1 -> declaration .)


state 149

    (23) statement1 -> ForLoop .

    END             reduce using rule 23 (statement1 -> ForLoop .)
    READ            reduce using rule 23 (statement1 -> ForLoop .)
    PRINT           reduce using rule 23 (statement1 -> ForLoop .)
    IF              reduce using rule 23 (statement1 -> ForLoop .)
    BAR             reduce using rule 23 (statement1 -> ForLoop .)
    WHILE           reduce using rule 23 (statement1 -> ForLoop .)
    for             reduce using rule 23 (statement1 -> ForLoop .)
    TC_INT          reduce using rule 23 (statement1 -> ForLoop .)
    TC_FLOAT        reduce using rule 23 (statement1 -> ForLoop .)
    IDENTIFIER      reduce using rule 23 (statement1 -> ForLoop .)
    RETURN          reduce using rule 23 (statement1 -> ForLoop .)
    LESSTHAN        reduce using rule 23 (statement1 -> ForLoop .)
    LBRACK          reduce using rule 23 (statement1 -> ForLoop .)
    LPAREN          reduce using rule 23 (statement1 -> ForLoop .)
    INT             reduce using rule 23 (statement1 -> ForLoop .)
    BOOLEAN         reduce using rule 23 (statement1 -> ForLoop .)
    FLOAT           reduce using rule 23 (statement1 -> ForLoop .)


state 150

    (22) statement1 -> WhileLoop .

    END             reduce using rule 22 (statement1 -> WhileLoop .)
    READ            reduce using rule 22 (statement1 -> WhileLoop .)
    PRINT           reduce using rule 22 (statement1 -> WhileLoop .)
    IF              reduce using rule 22 (statement1 -> WhileLoop .)
    BAR             reduce using rule 22 (statement1 -> WhileLoop .)
    WHILE           reduce using rule 22 (statement1 -> WhileLoop .)
    for             reduce using rule 22 (statement1 -> WhileLoop .)
    TC_INT          reduce using rule 22 (statement1 -> WhileLoop .)
    TC_FLOAT        reduce using rule 22 (statement1 -> WhileLoop .)
    IDENTIFIER      reduce using rule 22 (statement1 -> WhileLoop .)
    RETURN          reduce using rule 22 (statement1 -> WhileLoop .)
    LESSTHAN        reduce using rule 22 (statement1 -> WhileLoop .)
    LBRACK          reduce using rule 22 (statement1 -> WhileLoop .)
    LPAREN          reduce using rule 22 (statement1 -> WhileLoop .)
    INT             reduce using rule 22 (statement1 -> WhileLoop .)
    BOOLEAN         reduce using rule 22 (statement1 -> WhileLoop .)
    FLOAT           reduce using rule 22 (statement1 -> WhileLoop .)


state 151

    (29) statement1 -> stringOpStatement .

    END             reduce using rule 29 (statement1 -> stringOpStatement .)
    READ            reduce using rule 29 (statement1 -> stringOpStatement .)
    PRINT           reduce using rule 29 (statement1 -> stringOpStatement .)
    IF              reduce using rule 29 (statement1 -> stringOpStatement .)
    BAR             reduce using rule 29 (statement1 -> stringOpStatement .)
    WHILE           reduce using rule 29 (statement1 -> stringOpStatement .)
    for             reduce using rule 29 (statement1 -> stringOpStatement .)
    TC_INT          reduce using rule 29 (statement1 -> stringOpStatement .)
    TC_FLOAT        reduce using rule 29 (statement1 -> stringOpStatement .)
    IDENTIFIER      reduce using rule 29 (statement1 -> stringOpStatement .)
    RETURN          reduce using rule 29 (statement1 -> stringOpStatement .)
    LESSTHAN        reduce using rule 29 (statement1 -> stringOpStatement .)
    LBRACK          reduce using rule 29 (statement1 -> stringOpStatement .)
    LPAREN          reduce using rule 29 (statement1 -> stringOpStatement .)
    INT             reduce using rule 29 (statement1 -> stringOpStatement .)
    BOOLEAN         reduce using rule 29 (statement1 -> stringOpStatement .)
    FLOAT           reduce using rule 29 (statement1 -> stringOpStatement .)


state 152

    (30) statement1 -> listOPStatement . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 212
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    listOPStatement                shift and go to state 37
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    AssignmentHead                 shift and go to state 12
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 153

    (27) statement1 -> FunctionCall .

    END             reduce using rule 27 (statement1 -> FunctionCall .)
    READ            reduce using rule 27 (statement1 -> FunctionCall .)
    PRINT           reduce using rule 27 (statement1 -> FunctionCall .)
    IF              reduce using rule 27 (statement1 -> FunctionCall .)
    BAR             reduce using rule 27 (statement1 -> FunctionCall .)
    WHILE           reduce using rule 27 (statement1 -> FunctionCall .)
    for             reduce using rule 27 (statement1 -> FunctionCall .)
    TC_INT          reduce using rule 27 (statement1 -> FunctionCall .)
    TC_FLOAT        reduce using rule 27 (statement1 -> FunctionCall .)
    IDENTIFIER      reduce using rule 27 (statement1 -> FunctionCall .)
    RETURN          reduce using rule 27 (statement1 -> FunctionCall .)
    LESSTHAN        reduce using rule 27 (statement1 -> FunctionCall .)
    LBRACK          reduce using rule 27 (statement1 -> FunctionCall .)
    LPAREN          reduce using rule 27 (statement1 -> FunctionCall .)
    INT             reduce using rule 27 (statement1 -> FunctionCall .)
    BOOLEAN         reduce using rule 27 (statement1 -> FunctionCall .)
    FLOAT           reduce using rule 27 (statement1 -> FunctionCall .)


state 154

    (19) statement1 -> expression .

    END             reduce using rule 19 (statement1 -> expression .)
    READ            reduce using rule 19 (statement1 -> expression .)
    PRINT           reduce using rule 19 (statement1 -> expression .)
    IF              reduce using rule 19 (statement1 -> expression .)
    BAR             reduce using rule 19 (statement1 -> expression .)
    WHILE           reduce using rule 19 (statement1 -> expression .)
    for             reduce using rule 19 (statement1 -> expression .)
    TC_INT          reduce using rule 19 (statement1 -> expression .)
    TC_FLOAT        reduce using rule 19 (statement1 -> expression .)
    IDENTIFIER      reduce using rule 19 (statement1 -> expression .)
    RETURN          reduce using rule 19 (statement1 -> expression .)
    LESSTHAN        reduce using rule 19 (statement1 -> expression .)
    LBRACK          reduce using rule 19 (statement1 -> expression .)
    LPAREN          reduce using rule 19 (statement1 -> expression .)
    INT             reduce using rule 19 (statement1 -> expression .)
    BOOLEAN         reduce using rule 19 (statement1 -> expression .)
    FLOAT           reduce using rule 19 (statement1 -> expression .)


state 155

    (76) ForLoop -> for LPAREN AssignmentHead . Condition Increment RPAREN Body
    (86) Condition -> . RelationExpression
    (87) Condition -> . LPAREN Condition Compound Condition RPAREN
    (88) Condition -> . LPAREN NOT Condition RPAREN
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 45

    RelationExpression             shift and go to state 44
    Condition                      shift and go to state 213

state 156

    (99) AssignmentHead -> BAR . IDENTIFIER AssignmentOption BAR SEMICOLON

    IDENTIFIER      shift and go to state 214


state 157

    (70) typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .

    END             reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    READ            reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    PRINT           reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    IF              reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    BAR             reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    WHILE           reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    for             reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    TC_INT          reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    TC_FLOAT        reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    IDENTIFIER      reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    RETURN          reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LESSTHAN        reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LBRACK          reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    LPAREN          reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    INT             reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    BOOLEAN         reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)
    FLOAT           reduce using rule 70 (typecastToFloat -> TC_FLOAT IDENTIFIER SEMICOLON .)


state 158

    (61) listElem -> validListUnionValues COMMA . listElem
    (60) listElem -> . validListUnionValues
    (61) listElem -> . validListUnionValues COMMA listElem
    (62) listElem -> . EMPTY
    (64) validListUnionValues -> . CONSTANT
    (65) validListUnionValues -> . FLOATVALUE
    (66) validListUnionValues -> . booleanValue
    (67) validListUnionValues -> . STRINGVALUE
    (68) validListUnionValues -> . LISTVALUE
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    EMPTY           shift and go to state 91
    CONSTANT        shift and go to state 85
    FLOATVALUE      shift and go to state 84
    STRINGVALUE     shift and go to state 87
    LISTVALUE       shift and go to state 89
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    listElem                       shift and go to state 215
    booleanValue                   shift and go to state 90
    validListUnionValues           shift and go to state 86

state 159

    (59) list -> LBRACK listElem RBRACK .

    END             reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    READ            reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    PRINT           reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    IF              reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    BAR             reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    WHILE           reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    for             reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    TC_INT          reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    TC_FLOAT        reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    IDENTIFIER      reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    RETURN          reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    LESSTHAN        reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    LBRACK          reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    LPAREN          reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    INT             reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    BOOLEAN         reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    FLOAT           reduce using rule 59 (list -> LBRACK listElem RBRACK .)
    SEMICOLON       reduce using rule 59 (list -> LBRACK listElem RBRACK .)


state 160

    (119) ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .

    END             reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    READ            reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    PRINT           reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    IF              reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    BAR             reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    WHILE           reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    for             reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    TC_INT          reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    TC_FLOAT        reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    IDENTIFIER      reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    RETURN          reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    LESSTHAN        reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    LBRACK          reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    LPAREN          reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    INT             reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    BOOLEAN         reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    FLOAT           reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)
    SEMICOLON       reduce using rule 119 (ArithmeticExpression -> LESSTHAN CONSTANT GREATERTHAN .)


state 161

    (120) ArithmeticOperator -> PLUS .

    IDENTIFIER      reduce using rule 120 (ArithmeticOperator -> PLUS .)
    CONSTANT        reduce using rule 120 (ArithmeticOperator -> PLUS .)
    FLOATVALUE      reduce using rule 120 (ArithmeticOperator -> PLUS .)
    LISTVALUE       reduce using rule 120 (ArithmeticOperator -> PLUS .)
    TRUE            reduce using rule 120 (ArithmeticOperator -> PLUS .)
    FALSE           reduce using rule 120 (ArithmeticOperator -> PLUS .)


state 162

    (118) ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator . Operand GREATERTHAN
    (89) Operand -> . IDENTIFIER
    (90) Operand -> . CONSTANT
    (91) Operand -> . booleanValue
    (92) Operand -> . FLOATVALUE
    (93) Operand -> . LISTVALUE
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 76
    CONSTANT        shift and go to state 74
    FLOATVALUE      shift and go to state 71
    LISTVALUE       shift and go to state 75
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    Operand                        shift and go to state 216
    booleanValue                   shift and go to state 69

state 163

    (123) ArithmeticOperator -> DIV .

    IDENTIFIER      reduce using rule 123 (ArithmeticOperator -> DIV .)
    CONSTANT        reduce using rule 123 (ArithmeticOperator -> DIV .)
    FLOATVALUE      reduce using rule 123 (ArithmeticOperator -> DIV .)
    LISTVALUE       reduce using rule 123 (ArithmeticOperator -> DIV .)
    TRUE            reduce using rule 123 (ArithmeticOperator -> DIV .)
    FALSE           reduce using rule 123 (ArithmeticOperator -> DIV .)


state 164

    (121) ArithmeticOperator -> MINUS .

    IDENTIFIER      reduce using rule 121 (ArithmeticOperator -> MINUS .)
    CONSTANT        reduce using rule 121 (ArithmeticOperator -> MINUS .)
    FLOATVALUE      reduce using rule 121 (ArithmeticOperator -> MINUS .)
    LISTVALUE       reduce using rule 121 (ArithmeticOperator -> MINUS .)
    TRUE            reduce using rule 121 (ArithmeticOperator -> MINUS .)
    FALSE           reduce using rule 121 (ArithmeticOperator -> MINUS .)


state 165

    (122) ArithmeticOperator -> MULT .

    IDENTIFIER      reduce using rule 122 (ArithmeticOperator -> MULT .)
    CONSTANT        reduce using rule 122 (ArithmeticOperator -> MULT .)
    FLOATVALUE      reduce using rule 122 (ArithmeticOperator -> MULT .)
    LISTVALUE       reduce using rule 122 (ArithmeticOperator -> MULT .)
    TRUE            reduce using rule 122 (ArithmeticOperator -> MULT .)
    FALSE           reduce using rule 122 (ArithmeticOperator -> MULT .)


state 166

    (124) ArithmeticOperator -> MOD .

    IDENTIFIER      reduce using rule 124 (ArithmeticOperator -> MOD .)
    CONSTANT        reduce using rule 124 (ArithmeticOperator -> MOD .)
    FLOATVALUE      reduce using rule 124 (ArithmeticOperator -> MOD .)
    LISTVALUE       reduce using rule 124 (ArithmeticOperator -> MOD .)
    TRUE            reduce using rule 124 (ArithmeticOperator -> MOD .)
    FALSE           reduce using rule 124 (ArithmeticOperator -> MOD .)


state 167

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK . CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK . CONSTANT RBRACK EQUAL expression BAR SEMICOLON

    CONSTANT        shift and go to state 217


state 168

    (44) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL . expression BAR SEMICOLON
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LESSTHAN        shift and go to state 36
    IDENTIFIER      shift and go to state 218
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23

    listEval                       shift and go to state 17
    list                           shift and go to state 34
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    expression                     shift and go to state 219

state 169

    (41) identifierDeclaration -> BAR dataType IDENTIFIER BAR . SEMICOLON

    SEMICOLON       shift and go to state 220


state 170

    (99) AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR . SEMICOLON

    SEMICOLON       shift and go to state 221


state 171

    (102) AssignmentOptions2 -> CONSTANT .

    BAR             reduce using rule 102 (AssignmentOptions2 -> CONSTANT .)


state 172

    (103) AssignmentOptions2 -> ArithmeticExpression .

    BAR             reduce using rule 103 (AssignmentOptions2 -> ArithmeticExpression .)


state 173

    (101) AssignmentOption -> AssignmentOperator AssignmentOptions2 .

    BAR             reduce using rule 101 (AssignmentOption -> AssignmentOperator AssignmentOptions2 .)


state 174

    (106) AssignmentOptionChain -> Function .

    BAR             reduce using rule 106 (AssignmentOptionChain -> Function .)


state 175

    (105) AssignmentOptionChain -> IDENTIFIER .
    (63) listEval -> IDENTIFIER . LISTVALUE
    (133) Function -> IDENTIFIER . LPAREN Parameter RPAREN

    BAR             reduce using rule 105 (AssignmentOptionChain -> IDENTIFIER .)
    LISTVALUE       shift and go to state 64
    LPAREN          shift and go to state 126


state 176

    (104) AssignmentOptionChain -> listEval .

    BAR             reduce using rule 104 (AssignmentOptionChain -> listEval .)


state 177

    (107) AssignmentOptionChain -> AssignmentOptions2 .

    BAR             reduce using rule 107 (AssignmentOptionChain -> AssignmentOptions2 .)


state 178

    (58) listDec -> BAR IDENTIFIER EQUAL list . BAR SEMICOLON

    BAR             shift and go to state 222


state 179

    (100) AssignmentOption -> EQUAL AssignmentOptionChain .

    BAR             reduce using rule 100 (AssignmentOption -> EQUAL AssignmentOptionChain .)


state 180

    (16) statement -> READ LPAREN IDENTIFIER RPAREN . SEMICOLON statementTop

    SEMICOLON       shift and go to state 223


state 181

    (88) Condition -> LPAREN NOT Condition . RPAREN

    RPAREN          shift and go to state 224


state 182

    (94) Compound -> AND .

    LPAREN          reduce using rule 94 (Compound -> AND .)


state 183

    (87) Condition -> LPAREN Condition Compound . Condition RPAREN
    (86) Condition -> . RelationExpression
    (87) Condition -> . LPAREN Condition Compound Condition RPAREN
    (88) Condition -> . LPAREN NOT Condition RPAREN
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 45

    RelationExpression             shift and go to state 44
    Condition                      shift and go to state 225

state 184

    (95) Compound -> OR .

    LPAREN          reduce using rule 95 (Compound -> OR .)


state 185

    (71) WhileLoop -> WHILE Condition COLON Body .

    END             reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    READ            reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    PRINT           reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    IF              reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    BAR             reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    WHILE           reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    for             reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    TC_INT          reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    TC_FLOAT        reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    IDENTIFIER      reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    RETURN          reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    LESSTHAN        reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    LBRACK          reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    LPAREN          reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    INT             reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    BOOLEAN         reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)
    FLOAT           reduce using rule 71 (WhileLoop -> WHILE Condition COLON Body .)


state 186

    (17) statement -> PRINT LPAREN content RPAREN . SEMICOLON statementTop

    SEMICOLON       shift and go to state 226


state 187

    (34) morePrint -> PLUS . toPrint morePrint
    (36) toPrint -> . STRINGVALUE
    (37) toPrint -> . CONSTANT
    (38) toPrint -> . IDENTIFIER

    STRINGVALUE     shift and go to state 113
    CONSTANT        shift and go to state 112
    IDENTIFIER      shift and go to state 110

    toPrint                        shift and go to state 227

state 188

    (33) content -> toPrint morePrint .

    RPAREN          reduce using rule 33 (content -> toPrint morePrint .)


state 189

    (35) morePrint -> EMPTY .

    RPAREN          reduce using rule 35 (morePrint -> EMPTY .)


state 190

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT . COMMA validListUnionValues RPAREN SEMICOLON

    COMMA           shift and go to state 228


state 191

    (48) stringOpStatement -> IDENTIFIER stringOp LPAREN STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 229


state 192

    (49) stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER . RPAREN SEMICOLON

    RPAREN          shift and go to state 230


state 193

    (51) listOPStatement -> IDENTIFIER POP LPAREN listOpChoice . RPAREN SEMICOLON

    RPAREN          shift and go to state 231


state 194

    (52) listOpChoice -> CONSTANT .

    RPAREN          reduce using rule 52 (listOpChoice -> CONSTANT .)


state 195

    (53) listOpChoice -> EMPTY .

    RPAREN          reduce using rule 53 (listOpChoice -> EMPTY .)


state 196

    (137) FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 232


state 197

    (139) FunctionCallParameter -> IDENTIFIER COMMA . FunctionCallParameter
    (138) FunctionCallParameter -> . IDENTIFIER
    (139) FunctionCallParameter -> . IDENTIFIER COMMA FunctionCallParameter
    (140) FunctionCallParameter -> . EMPTY

    IDENTIFIER      shift and go to state 123
    EMPTY           shift and go to state 124

    FunctionCallParameter          shift and go to state 233

state 198

    (132) FunctionDefinition -> dataType Function COLON Body .

    END             reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    READ            reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    PRINT           reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    IF              reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    BAR             reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    WHILE           reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    for             reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    TC_INT          reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    TC_FLOAT        reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    IDENTIFIER      reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    RETURN          reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    LESSTHAN        reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    LBRACK          reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    LPAREN          reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    INT             reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    BOOLEAN         reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)
    FLOAT           reduce using rule 132 (FunctionDefinition -> dataType Function COLON Body .)


state 199

    (134) Parameter -> dataType . IDENTIFIER
    (135) Parameter -> dataType . IDENTIFIER COMMA Parameter

    IDENTIFIER      shift and go to state 234


state 200

    (133) Function -> IDENTIFIER LPAREN Parameter . RPAREN

    RPAREN          shift and go to state 235


state 201

    (136) Parameter -> EMPTY .

    RPAREN          reduce using rule 136 (Parameter -> EMPTY .)


state 202

    (117) RelationExpression -> LPAREN Operand RelationOperator Operand . RPAREN

    RPAREN          shift and go to state 236


state 203

    (32) statement1 -> PRINT LPAREN . content RPAREN SEMICOLON
    (33) content -> . toPrint morePrint
    (36) toPrint -> . STRINGVALUE
    (37) toPrint -> . CONSTANT
    (38) toPrint -> . IDENTIFIER

    STRINGVALUE     shift and go to state 113
    CONSTANT        shift and go to state 112
    IDENTIFIER      shift and go to state 110

    content                        shift and go to state 237
    toPrint                        shift and go to state 114

state 204

    (85) elifClause -> ELIF . Condition Body
    (86) Condition -> . RelationExpression
    (87) Condition -> . LPAREN Condition Compound Condition RPAREN
    (88) Condition -> . LPAREN NOT Condition RPAREN
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LPAREN          shift and go to state 45

    RelationExpression             shift and go to state 44
    Condition                      shift and go to state 238

state 205

    (80) IfThenElse -> IF Condition Body addElif .

    END             reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    READ            reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    PRINT           reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    IF              reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    BAR             reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    WHILE           reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    for             reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    TC_INT          reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    TC_FLOAT        reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    IDENTIFIER      reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    RETURN          reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    LESSTHAN        reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    LBRACK          reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    LPAREN          reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    INT             reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    BOOLEAN         reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)
    FLOAT           reduce using rule 80 (IfThenElse -> IF Condition Body addElif .)


state 206

    (83) addElif -> ELSE . Body
    (72) Body -> . statementMore
    (73) statementMore -> . statementMoreCont
    (74) statementMore -> . END
    (75) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 145
    READ            shift and go to state 141
    PRINT           shift and go to state 137
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    returnDec                      shift and go to state 135
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 138
    Body                           shift and go to state 239
    IfThenElse                     shift and go to state 140
    AssignmentHead                 shift and go to state 142
    typeCastToInt                  shift and go to state 143
    statementMoreCont              shift and go to state 136
    FunctionDefinition             shift and go to state 144
    listEval                       shift and go to state 17
    statementMore                  shift and go to state 146
    statement1                     shift and go to state 147
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 148
    ForLoop                        shift and go to state 149
    WhileLoop                      shift and go to state 150
    stringOpStatement              shift and go to state 151
    list                           shift and go to state 34
    listOPStatement                shift and go to state 152
    FunctionCall                   shift and go to state 153
    expression                     shift and go to state 154

state 207

    (81) addElif -> addElif2 .

    END             reduce using rule 81 (addElif -> addElif2 .)
    READ            reduce using rule 81 (addElif -> addElif2 .)
    PRINT           reduce using rule 81 (addElif -> addElif2 .)
    IF              reduce using rule 81 (addElif -> addElif2 .)
    BAR             reduce using rule 81 (addElif -> addElif2 .)
    WHILE           reduce using rule 81 (addElif -> addElif2 .)
    for             reduce using rule 81 (addElif -> addElif2 .)
    TC_INT          reduce using rule 81 (addElif -> addElif2 .)
    TC_FLOAT        reduce using rule 81 (addElif -> addElif2 .)
    IDENTIFIER      reduce using rule 81 (addElif -> addElif2 .)
    RETURN          reduce using rule 81 (addElif -> addElif2 .)
    LESSTHAN        reduce using rule 81 (addElif -> addElif2 .)
    LBRACK          reduce using rule 81 (addElif -> addElif2 .)
    LPAREN          reduce using rule 81 (addElif -> addElif2 .)
    INT             reduce using rule 81 (addElif -> addElif2 .)
    BOOLEAN         reduce using rule 81 (addElif -> addElif2 .)
    FLOAT           reduce using rule 81 (addElif -> addElif2 .)


state 208

    (82) addElif -> FI .

    END             reduce using rule 82 (addElif -> FI .)
    READ            reduce using rule 82 (addElif -> FI .)
    PRINT           reduce using rule 82 (addElif -> FI .)
    IF              reduce using rule 82 (addElif -> FI .)
    BAR             reduce using rule 82 (addElif -> FI .)
    WHILE           reduce using rule 82 (addElif -> FI .)
    for             reduce using rule 82 (addElif -> FI .)
    TC_INT          reduce using rule 82 (addElif -> FI .)
    TC_FLOAT        reduce using rule 82 (addElif -> FI .)
    IDENTIFIER      reduce using rule 82 (addElif -> FI .)
    RETURN          reduce using rule 82 (addElif -> FI .)
    LESSTHAN        reduce using rule 82 (addElif -> FI .)
    LBRACK          reduce using rule 82 (addElif -> FI .)
    LPAREN          reduce using rule 82 (addElif -> FI .)
    INT             reduce using rule 82 (addElif -> FI .)
    BOOLEAN         reduce using rule 82 (addElif -> FI .)
    FLOAT           reduce using rule 82 (addElif -> FI .)


state 209

    (84) addElif2 -> elifClause . addElif
    (81) addElif -> . addElif2
    (82) addElif -> . FI
    (83) addElif -> . ELSE Body
    (84) addElif2 -> . elifClause addElif
    (85) elifClause -> . ELIF Condition Body

    FI              shift and go to state 208
    ELSE            shift and go to state 206
    ELIF            shift and go to state 204

    addElif                        shift and go to state 240
    addElif2                       shift and go to state 207
    elifClause                     shift and go to state 209

state 210

    (31) statement1 -> READ LPAREN . IDENTIFIER RPAREN SEMICOLON

    IDENTIFIER      shift and go to state 241


state 211

    (75) statementMoreCont -> statement1 statementMore .

    END             reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    READ            reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    PRINT           reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    IF              reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    BAR             reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    WHILE           reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    for             reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    TC_INT          reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    TC_FLOAT        reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    IDENTIFIER      reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    RETURN          reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    LESSTHAN        reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    LBRACK          reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    LPAREN          reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    INT             reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    BOOLEAN         reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    FLOAT           reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    FI              reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    ELSE            reduce using rule 75 (statementMoreCont -> statement1 statementMore .)
    ELIF            reduce using rule 75 (statementMoreCont -> statement1 statementMore .)


state 212

    (30) statement1 -> listOPStatement statementTop .

    END             reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    READ            reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    PRINT           reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    IF              reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    BAR             reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    WHILE           reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    for             reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    TC_INT          reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    TC_FLOAT        reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    IDENTIFIER      reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    RETURN          reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    LESSTHAN        reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    LBRACK          reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    LPAREN          reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    INT             reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    BOOLEAN         reduce using rule 30 (statement1 -> listOPStatement statementTop .)
    FLOAT           reduce using rule 30 (statement1 -> listOPStatement statementTop .)


state 213

    (76) ForLoop -> for LPAREN AssignmentHead Condition . Increment RPAREN Body
    (77) Increment -> . SEMICOLON Operand Options

    SEMICOLON       shift and go to state 242

    Increment                      shift and go to state 243

state 214

    (99) AssignmentHead -> BAR IDENTIFIER . AssignmentOption BAR SEMICOLON
    (100) AssignmentOption -> . EQUAL AssignmentOptionChain
    (101) AssignmentOption -> . AssignmentOperator AssignmentOptions2
    (108) AssignmentOperator -> . PLUSEQUAL
    (109) AssignmentOperator -> . MINUSEQUAL
    (110) AssignmentOperator -> . MULTEQUAL
    (111) AssignmentOperator -> . DIVEQUAL
    (112) AssignmentOperator -> . MODEQUAL

    EQUAL           shift and go to state 244
    PLUSEQUAL       shift and go to state 99
    MINUSEQUAL      shift and go to state 102
    MULTEQUAL       shift and go to state 104
    DIVEQUAL        shift and go to state 98
    MODEQUAL        shift and go to state 105

    AssignmentOption               shift and go to state 100
    AssignmentOperator             shift and go to state 101

state 215

    (61) listElem -> validListUnionValues COMMA listElem .

    RBRACK          reduce using rule 61 (listElem -> validListUnionValues COMMA listElem .)


state 216

    (118) ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand . GREATERTHAN

    GREATERTHAN     shift and go to state 245


state 217

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT . RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT . RBRACK EQUAL expression BAR SEMICOLON

    RBRACK          shift and go to state 246


state 218

    (63) listEval -> IDENTIFIER . LISTVALUE

    LISTVALUE       shift and go to state 64


state 219

    (44) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression . BAR SEMICOLON

    BAR             shift and go to state 247


state 220

    (41) identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .

    END             reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    READ            reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    PRINT           reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    IF              reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    BAR             reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    WHILE           reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    for             reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    TC_INT          reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    RETURN          reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LESSTHAN        reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LBRACK          reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    LPAREN          reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    INT             reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    BOOLEAN         reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)
    FLOAT           reduce using rule 41 (identifierDeclaration -> BAR dataType IDENTIFIER BAR SEMICOLON .)


state 221

    (99) AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .

    END             reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    READ            reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    PRINT           reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    IF              reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    BAR             reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    WHILE           reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    for             reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    TC_INT          reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    RETURN          reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LESSTHAN        reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LBRACK          reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    LPAREN          reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    INT             reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    BOOLEAN         reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)
    FLOAT           reduce using rule 99 (AssignmentHead -> BAR IDENTIFIER AssignmentOption BAR SEMICOLON .)


state 222

    (58) listDec -> BAR IDENTIFIER EQUAL list BAR . SEMICOLON

    SEMICOLON       shift and go to state 248


state 223

    (16) statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 249
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 224

    (88) Condition -> LPAREN NOT Condition RPAREN .

    RPAREN          reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    SEMICOLON       reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    AND             reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    OR              reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    END             reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    READ            reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    PRINT           reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    IF              reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    BAR             reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    WHILE           reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    for             reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    TC_INT          reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    TC_FLOAT        reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    IDENTIFIER      reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    RETURN          reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    LESSTHAN        reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    LBRACK          reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    LPAREN          reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    INT             reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    BOOLEAN         reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    FLOAT           reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)
    COLON           reduce using rule 88 (Condition -> LPAREN NOT Condition RPAREN .)


state 225

    (87) Condition -> LPAREN Condition Compound Condition . RPAREN

    RPAREN          shift and go to state 250


state 226

    (17) statement -> PRINT LPAREN content RPAREN SEMICOLON . statementTop
    (1) statementTop -> . END
    (2) statementTop -> . statement
    (3) statement -> . declaration statementTop
    (4) statement -> . expression statementTop
    (5) statement -> . IfThenElse statementTop
    (6) statement -> . AssignmentHead statementTop
    (7) statement -> . WhileLoop statementTop
    (8) statement -> . ForLoop statementTop
    (9) statement -> . typeCastToInt statementTop
    (10) statement -> . typecastToFloat statementTop
    (11) statement -> . FunctionDefinition statementTop
    (12) statement -> . FunctionCall statementTop
    (13) statement -> . returnDec statementTop
    (14) statement -> . stringOpStatement statementTop
    (15) statement -> . listOPStatement statementTop
    (16) statement -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop
    (17) statement -> . PRINT LPAREN content RPAREN SEMICOLON statementTop
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 18
    READ            shift and go to state 4
    PRINT           shift and go to state 7
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    statementTop                   shift and go to state 251
    returnDec                      shift and go to state 2
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 10
    IfThenElse                     shift and go to state 11
    AssignmentHead                 shift and go to state 12
    typeCastToInt                  shift and go to state 13
    statement                      shift and go to state 14
    FunctionDefinition             shift and go to state 16
    listEval                       shift and go to state 17
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 24
    ForLoop                        shift and go to state 25
    WhileLoop                      shift and go to state 28
    stringOpStatement              shift and go to state 29
    list                           shift and go to state 34
    listOPStatement                shift and go to state 37
    FunctionCall                   shift and go to state 38
    expression                     shift and go to state 39

state 227

    (34) morePrint -> PLUS toPrint . morePrint
    (34) morePrint -> . PLUS toPrint morePrint
    (35) morePrint -> . EMPTY

    PLUS            shift and go to state 187
    EMPTY           shift and go to state 189

    morePrint                      shift and go to state 252

state 228

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA . validListUnionValues RPAREN SEMICOLON
    (64) validListUnionValues -> . CONSTANT
    (65) validListUnionValues -> . FLOATVALUE
    (66) validListUnionValues -> . booleanValue
    (67) validListUnionValues -> . STRINGVALUE
    (68) validListUnionValues -> . LISTVALUE
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    CONSTANT        shift and go to state 85
    FLOATVALUE      shift and go to state 84
    STRINGVALUE     shift and go to state 87
    LISTVALUE       shift and go to state 89
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    booleanValue                   shift and go to state 90
    validListUnionValues           shift and go to state 253

state 229

    (48) stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 254


state 230

    (49) stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 255


state 231

    (51) listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 256


state 232

    (137) FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .

    END             reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    READ            reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    PRINT           reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    IF              reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    BAR             reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    WHILE           reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    for             reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    TC_INT          reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    RETURN          reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LBRACK          reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    LPAREN          reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    INT             reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)
    FLOAT           reduce using rule 137 (FunctionCall -> IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON .)


state 233

    (139) FunctionCallParameter -> IDENTIFIER COMMA FunctionCallParameter .

    RPAREN          reduce using rule 139 (FunctionCallParameter -> IDENTIFIER COMMA FunctionCallParameter .)


state 234

    (134) Parameter -> dataType IDENTIFIER .
    (135) Parameter -> dataType IDENTIFIER . COMMA Parameter

    RPAREN          reduce using rule 134 (Parameter -> dataType IDENTIFIER .)
    COMMA           shift and go to state 257


state 235

    (133) Function -> IDENTIFIER LPAREN Parameter RPAREN .

    COLON           reduce using rule 133 (Function -> IDENTIFIER LPAREN Parameter RPAREN .)
    BAR             reduce using rule 133 (Function -> IDENTIFIER LPAREN Parameter RPAREN .)


state 236

    (117) RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .

    END             reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    READ            reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    PRINT           reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    IF              reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    BAR             reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    WHILE           reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    for             reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    TC_INT          reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    TC_FLOAT        reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    IDENTIFIER      reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    RETURN          reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LESSTHAN        reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LBRACK          reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    LPAREN          reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    INT             reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    BOOLEAN         reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    FLOAT           reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    RPAREN          reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    AND             reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    OR              reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    SEMICOLON       reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)
    COLON           reduce using rule 117 (RelationExpression -> LPAREN Operand RelationOperator Operand RPAREN .)


state 237

    (32) statement1 -> PRINT LPAREN content . RPAREN SEMICOLON

    RPAREN          shift and go to state 258


state 238

    (85) elifClause -> ELIF Condition . Body
    (72) Body -> . statementMore
    (73) statementMore -> . statementMoreCont
    (74) statementMore -> . END
    (75) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 145
    READ            shift and go to state 141
    PRINT           shift and go to state 137
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    returnDec                      shift and go to state 135
    listDec                        shift and go to state 6
    typecastToFloat                shift and go to state 138
    Body                           shift and go to state 259
    IfThenElse                     shift and go to state 140
    AssignmentHead                 shift and go to state 142
    typeCastToInt                  shift and go to state 143
    statementMoreCont              shift and go to state 136
    FunctionDefinition             shift and go to state 144
    listEval                       shift and go to state 17
    statementMore                  shift and go to state 146
    statement1                     shift and go to state 147
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 148
    ForLoop                        shift and go to state 149
    WhileLoop                      shift and go to state 150
    stringOpStatement              shift and go to state 151
    list                           shift and go to state 34
    listOPStatement                shift and go to state 152
    FunctionCall                   shift and go to state 153
    expression                     shift and go to state 154

state 239

    (83) addElif -> ELSE Body .

    END             reduce using rule 83 (addElif -> ELSE Body .)
    READ            reduce using rule 83 (addElif -> ELSE Body .)
    PRINT           reduce using rule 83 (addElif -> ELSE Body .)
    IF              reduce using rule 83 (addElif -> ELSE Body .)
    BAR             reduce using rule 83 (addElif -> ELSE Body .)
    WHILE           reduce using rule 83 (addElif -> ELSE Body .)
    for             reduce using rule 83 (addElif -> ELSE Body .)
    TC_INT          reduce using rule 83 (addElif -> ELSE Body .)
    TC_FLOAT        reduce using rule 83 (addElif -> ELSE Body .)
    IDENTIFIER      reduce using rule 83 (addElif -> ELSE Body .)
    RETURN          reduce using rule 83 (addElif -> ELSE Body .)
    LESSTHAN        reduce using rule 83 (addElif -> ELSE Body .)
    LBRACK          reduce using rule 83 (addElif -> ELSE Body .)
    LPAREN          reduce using rule 83 (addElif -> ELSE Body .)
    INT             reduce using rule 83 (addElif -> ELSE Body .)
    BOOLEAN         reduce using rule 83 (addElif -> ELSE Body .)
    FLOAT           reduce using rule 83 (addElif -> ELSE Body .)


state 240

    (84) addElif2 -> elifClause addElif .

    END             reduce using rule 84 (addElif2 -> elifClause addElif .)
    READ            reduce using rule 84 (addElif2 -> elifClause addElif .)
    PRINT           reduce using rule 84 (addElif2 -> elifClause addElif .)
    IF              reduce using rule 84 (addElif2 -> elifClause addElif .)
    BAR             reduce using rule 84 (addElif2 -> elifClause addElif .)
    WHILE           reduce using rule 84 (addElif2 -> elifClause addElif .)
    for             reduce using rule 84 (addElif2 -> elifClause addElif .)
    TC_INT          reduce using rule 84 (addElif2 -> elifClause addElif .)
    TC_FLOAT        reduce using rule 84 (addElif2 -> elifClause addElif .)
    IDENTIFIER      reduce using rule 84 (addElif2 -> elifClause addElif .)
    RETURN          reduce using rule 84 (addElif2 -> elifClause addElif .)
    LESSTHAN        reduce using rule 84 (addElif2 -> elifClause addElif .)
    LBRACK          reduce using rule 84 (addElif2 -> elifClause addElif .)
    LPAREN          reduce using rule 84 (addElif2 -> elifClause addElif .)
    INT             reduce using rule 84 (addElif2 -> elifClause addElif .)
    BOOLEAN         reduce using rule 84 (addElif2 -> elifClause addElif .)
    FLOAT           reduce using rule 84 (addElif2 -> elifClause addElif .)


state 241

    (31) statement1 -> READ LPAREN IDENTIFIER . RPAREN SEMICOLON

    RPAREN          shift and go to state 260


state 242

    (77) Increment -> SEMICOLON . Operand Options
    (89) Operand -> . IDENTIFIER
    (90) Operand -> . CONSTANT
    (91) Operand -> . booleanValue
    (92) Operand -> . FLOATVALUE
    (93) Operand -> . LISTVALUE
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 76
    CONSTANT        shift and go to state 74
    FLOATVALUE      shift and go to state 71
    LISTVALUE       shift and go to state 75
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    Operand                        shift and go to state 261
    booleanValue                   shift and go to state 69

state 243

    (76) ForLoop -> for LPAREN AssignmentHead Condition Increment . RPAREN Body

    RPAREN          shift and go to state 262


state 244

    (100) AssignmentOption -> EQUAL . AssignmentOptionChain
    (104) AssignmentOptionChain -> . listEval
    (105) AssignmentOptionChain -> . IDENTIFIER
    (106) AssignmentOptionChain -> . Function
    (107) AssignmentOptionChain -> . AssignmentOptions2
    (63) listEval -> . IDENTIFIER LISTVALUE
    (133) Function -> . IDENTIFIER LPAREN Parameter RPAREN
    (102) AssignmentOptions2 -> . CONSTANT
    (103) AssignmentOptions2 -> . ArithmeticExpression
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN

    IDENTIFIER      shift and go to state 175
    CONSTANT        shift and go to state 171
    LESSTHAN        shift and go to state 36

    Function                       shift and go to state 174
    listEval                       shift and go to state 176
    ArithmeticExpression           shift and go to state 172
    AssignmentOptions2             shift and go to state 177
    AssignmentOptionChain          shift and go to state 179

state 245

    (118) ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .

    END             reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    READ            reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    PRINT           reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    IF              reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    BAR             reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    WHILE           reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    for             reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    TC_INT          reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    TC_FLOAT        reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    IDENTIFIER      reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    RETURN          reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LESSTHAN        reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LBRACK          reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    LPAREN          reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    INT             reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    BOOLEAN         reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    FLOAT           reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)
    SEMICOLON       reduce using rule 118 (ArithmeticExpression -> LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN .)


state 246

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK . BAR SEMICOLON
    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK . EQUAL expression BAR SEMICOLON

    BAR             shift and go to state 264
    EQUAL           shift and go to state 263


state 247

    (44) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR . SEMICOLON

    SEMICOLON       shift and go to state 265


state 248

    (58) listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .

    END             reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    READ            reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    PRINT           reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    IF              reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    BAR             reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    WHILE           reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    for             reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    TC_INT          reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    RETURN          reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    LESSTHAN        reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    LBRACK          reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    LPAREN          reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    INT             reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    BOOLEAN         reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)
    FLOAT           reduce using rule 58 (listDec -> BAR IDENTIFIER EQUAL list BAR SEMICOLON .)


state 249

    (16) statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .

    $end            reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    END             reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    READ            reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    PRINT           reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    IF              reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    BAR             reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    WHILE           reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    for             reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    TC_INT          reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    TC_FLOAT        reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    IDENTIFIER      reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    RETURN          reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LESSTHAN        reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LBRACK          reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    LPAREN          reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    INT             reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    BOOLEAN         reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)
    FLOAT           reduce using rule 16 (statement -> READ LPAREN IDENTIFIER RPAREN SEMICOLON statementTop .)


state 250

    (87) Condition -> LPAREN Condition Compound Condition RPAREN .

    RPAREN          reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    SEMICOLON       reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    AND             reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    OR              reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    END             reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    READ            reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    PRINT           reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    IF              reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    BAR             reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    WHILE           reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    for             reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    TC_INT          reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    TC_FLOAT        reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    IDENTIFIER      reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    RETURN          reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    LESSTHAN        reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    LBRACK          reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    LPAREN          reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    INT             reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    BOOLEAN         reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    FLOAT           reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)
    COLON           reduce using rule 87 (Condition -> LPAREN Condition Compound Condition RPAREN .)


state 251

    (17) statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .

    $end            reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    END             reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    READ            reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    PRINT           reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    IF              reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    BAR             reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    WHILE           reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    for             reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    TC_INT          reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    TC_FLOAT        reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    IDENTIFIER      reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    RETURN          reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LESSTHAN        reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LBRACK          reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    LPAREN          reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    INT             reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    BOOLEAN         reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)
    FLOAT           reduce using rule 17 (statement -> PRINT LPAREN content RPAREN SEMICOLON statementTop .)


state 252

    (34) morePrint -> PLUS toPrint morePrint .

    RPAREN          reduce using rule 34 (morePrint -> PLUS toPrint morePrint .)


state 253

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues . RPAREN SEMICOLON

    RPAREN          shift and go to state 266


state 254

    (48) stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .

    END             reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    READ            reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    PRINT           reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    IF              reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    BAR             reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    WHILE           reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    for             reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    TC_INT          reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    RETURN          reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LBRACK          reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    LPAREN          reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    INT             reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)
    FLOAT           reduce using rule 48 (stringOpStatement -> IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON .)


state 255

    (49) stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .

    END             reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    READ            reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    PRINT           reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IF              reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BAR             reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    WHILE           reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    for             reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_INT          reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    RETURN          reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LBRACK          reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LPAREN          reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    INT             reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)
    FLOAT           reduce using rule 49 (stringOpStatement -> IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON .)


state 256

    (51) listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .

    END             reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    READ            reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    PRINT           reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    IF              reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    BAR             reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    WHILE           reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    for             reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    TC_INT          reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    RETURN          reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LBRACK          reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    LPAREN          reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    INT             reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)
    FLOAT           reduce using rule 51 (listOPStatement -> IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON .)


state 257

    (135) Parameter -> dataType IDENTIFIER COMMA . Parameter
    (134) Parameter -> . dataType IDENTIFIER
    (135) Parameter -> . dataType IDENTIFIER COMMA Parameter
    (136) Parameter -> . EMPTY
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    EMPTY           shift and go to state 201
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    dataType                       shift and go to state 199
    Parameter                      shift and go to state 267

state 258

    (32) statement1 -> PRINT LPAREN content RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 268


state 259

    (85) elifClause -> ELIF Condition Body .

    FI              reduce using rule 85 (elifClause -> ELIF Condition Body .)
    ELSE            reduce using rule 85 (elifClause -> ELIF Condition Body .)
    ELIF            reduce using rule 85 (elifClause -> ELIF Condition Body .)


state 260

    (31) statement1 -> READ LPAREN IDENTIFIER RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 269


state 261

    (77) Increment -> SEMICOLON Operand . Options
    (78) Options -> . Iterator
    (79) Options -> . AssignmentOperator Operand
    (96) Iterator -> . PLUSPLUS
    (97) Iterator -> . MINUSMINUS
    (98) Iterator -> . EMPTY
    (108) AssignmentOperator -> . PLUSEQUAL
    (109) AssignmentOperator -> . MINUSEQUAL
    (110) AssignmentOperator -> . MULTEQUAL
    (111) AssignmentOperator -> . DIVEQUAL
    (112) AssignmentOperator -> . MODEQUAL

    PLUSPLUS        shift and go to state 271
    MINUSMINUS      shift and go to state 273
    EMPTY           shift and go to state 275
    PLUSEQUAL       shift and go to state 99
    MINUSEQUAL      shift and go to state 102
    MULTEQUAL       shift and go to state 104
    DIVEQUAL        shift and go to state 98
    MODEQUAL        shift and go to state 105

    AssignmentOperator             shift and go to state 272
    Options                        shift and go to state 274
    Iterator                       shift and go to state 270

state 262

    (76) ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN . Body
    (72) Body -> . statementMore
    (73) statementMore -> . statementMoreCont
    (74) statementMore -> . END
    (75) statementMoreCont -> . statement1 statementMore
    (18) statement1 -> . declaration
    (19) statement1 -> . expression
    (20) statement1 -> . IfThenElse
    (21) statement1 -> . AssignmentHead
    (22) statement1 -> . WhileLoop
    (23) statement1 -> . ForLoop
    (24) statement1 -> . typeCastToInt
    (25) statement1 -> . typecastToFloat
    (26) statement1 -> . FunctionDefinition
    (27) statement1 -> . FunctionCall
    (28) statement1 -> . returnDec
    (29) statement1 -> . stringOpStatement
    (30) statement1 -> . listOPStatement statementTop
    (31) statement1 -> . READ LPAREN IDENTIFIER RPAREN SEMICOLON
    (32) statement1 -> . PRINT LPAREN content RPAREN SEMICOLON
    (39) declaration -> . identifierDeclaration
    (40) declaration -> . listDec
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (80) IfThenElse -> . IF Condition Body addElif
    (99) AssignmentHead -> . BAR IDENTIFIER AssignmentOption BAR SEMICOLON
    (71) WhileLoop -> . WHILE Condition COLON Body
    (76) ForLoop -> . for LPAREN AssignmentHead Condition Increment RPAREN Body
    (69) typeCastToInt -> . TC_INT IDENTIFIER SEMICOLON
    (70) typecastToFloat -> . TC_FLOAT IDENTIFIER SEMICOLON
    (132) FunctionDefinition -> . dataType Function COLON Body
    (137) FunctionCall -> . IDENTIFIER LPAREN FunctionCallParameter RPAREN SEMICOLON
    (141) returnDec -> . RETURN CONSTANT SEMICOLON
    (142) returnDec -> . RETURN IDENTIFIER SEMICOLON
    (143) returnDec -> . RETURN expression SEMICOLON
    (144) returnDec -> . RETURN SEMICOLON
    (48) stringOpStatement -> . IDENTIFIER stringOp LPAREN STRING RPAREN SEMICOLON
    (49) stringOpStatement -> . IDENTIFIER stringOp LPAREN IDENTIFIER RPAREN SEMICOLON
    (50) listOPStatement -> . IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON
    (51) listOPStatement -> . IDENTIFIER POP LPAREN listOpChoice RPAREN SEMICOLON
    (41) identifierDeclaration -> . BAR dataType IDENTIFIER BAR SEMICOLON
    (42) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON
    (43) identifierDeclaration -> . BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON
    (44) identifierDeclaration -> . BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON
    (58) listDec -> . BAR IDENTIFIER EQUAL list BAR SEMICOLON
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN
    (45) dataType -> . INT
    (46) dataType -> . BOOLEAN
    (47) dataType -> . FLOAT

    END             shift and go to state 145
    READ            shift and go to state 141
    PRINT           shift and go to state 137
    IF              shift and go to state 27
    BAR             shift and go to state 3
    WHILE           shift and go to state 5
    for             shift and go to state 30
    TC_INT          shift and go to state 9
    TC_FLOAT        shift and go to state 32
    IDENTIFIER      shift and go to state 15
    RETURN          shift and go to state 8
    LESSTHAN        shift and go to state 36
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23
    INT             shift and go to state 31
    BOOLEAN         shift and go to state 26
    FLOAT           shift and go to state 33

    returnDec                      shift and go to state 135
    listDec                        shift and go to state 6
    statementMoreCont              shift and go to state 136
    typecastToFloat                shift and go to state 138
    Body                           shift and go to state 276
    IfThenElse                     shift and go to state 140
    AssignmentHead                 shift and go to state 142
    typeCastToInt                  shift and go to state 143
    FunctionDefinition             shift and go to state 144
    listEval                       shift and go to state 17
    statementMore                  shift and go to state 146
    statement1                     shift and go to state 147
    dataType                       shift and go to state 19
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    identifierDeclaration          shift and go to state 22
    declaration                    shift and go to state 148
    ForLoop                        shift and go to state 149
    WhileLoop                      shift and go to state 150
    stringOpStatement              shift and go to state 151
    list                           shift and go to state 34
    listOPStatement                shift and go to state 152
    FunctionCall                   shift and go to state 153
    expression                     shift and go to state 154

state 263

    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL . expression BAR SEMICOLON
    (113) expression -> . ArithmeticExpression
    (114) expression -> . listEval
    (115) expression -> . list
    (116) expression -> . RelationExpression
    (118) ArithmeticExpression -> . LESSTHAN Operand ArithmeticOperator Operand GREATERTHAN
    (119) ArithmeticExpression -> . LESSTHAN CONSTANT GREATERTHAN
    (63) listEval -> . IDENTIFIER LISTVALUE
    (59) list -> . LBRACK listElem RBRACK
    (117) RelationExpression -> . LPAREN Operand RelationOperator Operand RPAREN

    LESSTHAN        shift and go to state 36
    IDENTIFIER      shift and go to state 218
    LBRACK          shift and go to state 35
    LPAREN          shift and go to state 23

    listEval                       shift and go to state 17
    list                           shift and go to state 34
    ArithmeticExpression           shift and go to state 20
    RelationExpression             shift and go to state 21
    expression                     shift and go to state 277

state 264

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR . SEMICOLON

    SEMICOLON       shift and go to state 278


state 265

    (44) identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .

    END             reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    READ            reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    PRINT           reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    IF              reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    BAR             reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    WHILE           reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    for             reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    TC_INT          reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    RETURN          reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LESSTHAN        reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LBRACK          reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    LPAREN          reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    INT             reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    BOOLEAN         reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)
    FLOAT           reduce using rule 44 (identifierDeclaration -> BAR dataType IDENTIFIER EQUAL expression BAR SEMICOLON .)


state 266

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 279


state 267

    (135) Parameter -> dataType IDENTIFIER COMMA Parameter .

    RPAREN          reduce using rule 135 (Parameter -> dataType IDENTIFIER COMMA Parameter .)


state 268

    (32) statement1 -> PRINT LPAREN content RPAREN SEMICOLON .

    END             reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    READ            reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    PRINT           reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    IF              reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    BAR             reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    WHILE           reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    for             reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    TC_INT          reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    RETURN          reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LBRACK          reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    LPAREN          reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    INT             reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)
    FLOAT           reduce using rule 32 (statement1 -> PRINT LPAREN content RPAREN SEMICOLON .)


state 269

    (31) statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .

    END             reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    READ            reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    PRINT           reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IF              reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BAR             reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    WHILE           reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    for             reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_INT          reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    RETURN          reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LBRACK          reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    LPAREN          reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    INT             reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)
    FLOAT           reduce using rule 31 (statement1 -> READ LPAREN IDENTIFIER RPAREN SEMICOLON .)


state 270

    (78) Options -> Iterator .

    RPAREN          reduce using rule 78 (Options -> Iterator .)


state 271

    (96) Iterator -> PLUSPLUS .

    RPAREN          reduce using rule 96 (Iterator -> PLUSPLUS .)


state 272

    (79) Options -> AssignmentOperator . Operand
    (89) Operand -> . IDENTIFIER
    (90) Operand -> . CONSTANT
    (91) Operand -> . booleanValue
    (92) Operand -> . FLOATVALUE
    (93) Operand -> . LISTVALUE
    (145) booleanValue -> . TRUE
    (146) booleanValue -> . FALSE

    IDENTIFIER      shift and go to state 76
    CONSTANT        shift and go to state 74
    FLOATVALUE      shift and go to state 71
    LISTVALUE       shift and go to state 75
    TRUE            shift and go to state 70
    FALSE           shift and go to state 72

    Operand                        shift and go to state 280
    booleanValue                   shift and go to state 69

state 273

    (97) Iterator -> MINUSMINUS .

    RPAREN          reduce using rule 97 (Iterator -> MINUSMINUS .)


state 274

    (77) Increment -> SEMICOLON Operand Options .

    RPAREN          reduce using rule 77 (Increment -> SEMICOLON Operand Options .)


state 275

    (98) Iterator -> EMPTY .

    RPAREN          reduce using rule 98 (Iterator -> EMPTY .)


state 276

    (76) ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .

    END             reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    READ            reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    PRINT           reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    IF              reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    BAR             reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    WHILE           reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    for             reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    TC_INT          reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    TC_FLOAT        reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    IDENTIFIER      reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    RETURN          reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LESSTHAN        reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LBRACK          reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    LPAREN          reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    INT             reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    BOOLEAN         reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)
    FLOAT           reduce using rule 76 (ForLoop -> for LPAREN AssignmentHead Condition Increment RPAREN Body .)


state 277

    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression . BAR SEMICOLON

    BAR             shift and go to state 281


state 278

    (42) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .

    END             reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    READ            reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    PRINT           reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    IF              reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    BAR             reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    WHILE           reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    for             reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    TC_INT          reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    RETURN          reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LESSTHAN        reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LBRACK          reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    LPAREN          reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    INT             reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    BOOLEAN         reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)
    FLOAT           reduce using rule 42 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK BAR SEMICOLON .)


state 279

    (50) listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .

    END             reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    READ            reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    PRINT           reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    IF              reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    BAR             reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    WHILE           reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    for             reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    TC_INT          reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    TC_FLOAT        reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    IDENTIFIER      reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    RETURN          reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LESSTHAN        reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LBRACK          reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    LPAREN          reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    INT             reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    BOOLEAN         reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)
    FLOAT           reduce using rule 50 (listOPStatement -> IDENTIFIER INSERT LPAREN CONSTANT COMMA validListUnionValues RPAREN SEMICOLON .)


state 280

    (79) Options -> AssignmentOperator Operand .

    RPAREN          reduce using rule 79 (Options -> AssignmentOperator Operand .)


state 281

    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR . SEMICOLON

    SEMICOLON       shift and go to state 282


state 282

    (43) identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .

    END             reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    READ            reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    PRINT           reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    IF              reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    BAR             reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    WHILE           reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    for             reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    TC_INT          reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    TC_FLOAT        reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    IDENTIFIER      reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    RETURN          reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LESSTHAN        reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LBRACK          reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    LPAREN          reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    INT             reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    BOOLEAN         reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)
    FLOAT           reduce using rule 43 (identifierDeclaration -> BAR dataType IDENTIFIER LBRACK CONSTANT RBRACK EQUAL expression BAR SEMICOLON .)

